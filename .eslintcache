[{"/var/www/html/react-template-hooks/src/index.js":"1","/var/www/html/react-template-hooks/src/App.js":"2","/var/www/html/react-template-hooks/src/Layout/Header.js":"3","/var/www/html/react-template-hooks/src/Layout/Content.js":"4","/var/www/html/react-template-hooks/src/Layout/Sidebar.js":"5","/var/www/html/react-template-hooks/src/Layout/MyContent.js":"6","/var/www/html/react-template-hooks/src/Layout/Footer.js":"7","/var/www/html/react-template-hooks/src/Components/Login.js":"8","/var/www/html/react-template-hooks/src/Components/Student/StudHome.js":"9","/var/www/html/react-template-hooks/src/Components/Student/CountCard.js":"10","/var/www/html/react-template-hooks/src/Components/Student/ExamCard.js":"11","/var/www/html/react-template-hooks/src/Components/LoginButton.js":"12","/var/www/html/react-template-hooks/src/Components/Student/Instructions.js":"13","/var/www/html/react-template-hooks/src/Components/Startexam.js":"14","/var/www/html/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"15","/var/www/html/react-template-hooks/src/Components/Exam/Options.js":"16","/var/www/html/react-template-hooks/src/Components/Exam/QuestionButtons.js":"17","/var/www/html/react-template-hooks/src/Components/Exam/NextSaveButton.js":"18","/var/www/html/react-template-hooks/src/Components/Exam/PreviousButton.js":"19","/var/www/html/react-template-hooks/src/Components/Exam/MyTimer.js":"20","/var/www/html/react-template-hooks/src/Components/Exam/OverallSummery.js":"21","/var/www/html/react-template-hooks/src/Components/Exam/EndExamButton.js":"22","/var/www/html/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/var/www/html/react-template-hooks/src/AlertDismissible.js":"24","/var/www/html/react-template-hooks/src/api.js":"25"},{"size":199,"mtime":1610375291954,"results":"26","hashOfConfig":"27"},{"size":1794,"mtime":1610377251960,"results":"28","hashOfConfig":"27"},{"size":2358,"mtime":1610380622014,"results":"29","hashOfConfig":"27"},{"size":1268,"mtime":1610102374000,"results":"30","hashOfConfig":"27"},{"size":747,"mtime":1610102374000,"results":"31","hashOfConfig":"27"},{"size":7927,"mtime":1610102374000,"results":"32","hashOfConfig":"27"},{"size":533,"mtime":1610102374000,"results":"33","hashOfConfig":"27"},{"size":7236,"mtime":1610377409899,"results":"34","hashOfConfig":"27"},{"size":2952,"mtime":1610516491487,"results":"35","hashOfConfig":"27"},{"size":355,"mtime":1610102374000,"results":"36","hashOfConfig":"27"},{"size":5057,"mtime":1610519208518,"results":"37","hashOfConfig":"27"},{"size":864,"mtime":1610377536434,"results":"38","hashOfConfig":"27"},{"size":4780,"mtime":1610377810260,"results":"39","hashOfConfig":"27"},{"size":5597,"mtime":1610430172800,"results":"40","hashOfConfig":"27"},{"size":2355,"mtime":1610102374000,"results":"41","hashOfConfig":"27"},{"size":1521,"mtime":1610102374000,"results":"42","hashOfConfig":"27"},{"size":2338,"mtime":1610102374000,"results":"43","hashOfConfig":"27"},{"size":7807,"mtime":1610380544602,"results":"44","hashOfConfig":"27"},{"size":1535,"mtime":1610102374000,"results":"45","hashOfConfig":"27"},{"size":2455,"mtime":1610380543858,"results":"46","hashOfConfig":"27"},{"size":2953,"mtime":1610102374000,"results":"47","hashOfConfig":"27"},{"size":1867,"mtime":1610380129276,"results":"48","hashOfConfig":"27"},{"size":4088,"mtime":1610380881597,"results":"49","hashOfConfig":"27"},{"size":434,"mtime":1610102374000,"results":"50","hashOfConfig":"27"},{"size":143,"mtime":1610371769594,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ydqsbb",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/var/www/html/react-template-hooks/src/index.js",[],["104","105"],"/var/www/html/react-template-hooks/src/App.js",[],"/var/www/html/react-template-hooks/src/Layout/Header.js",[],"/var/www/html/react-template-hooks/src/Layout/Content.js",[],"/var/www/html/react-template-hooks/src/Layout/Sidebar.js",[],"/var/www/html/react-template-hooks/src/Layout/MyContent.js",[],"/var/www/html/react-template-hooks/src/Layout/Footer.js",[],"/var/www/html/react-template-hooks/src/Components/Login.js",[],"/var/www/html/react-template-hooks/src/Components/Student/StudHome.js",[],"/var/www/html/react-template-hooks/src/Components/Student/CountCard.js",[],"/var/www/html/react-template-hooks/src/Components/Student/ExamCard.js",[],"/var/www/html/react-template-hooks/src/Components/LoginButton.js",[],"/var/www/html/react-template-hooks/src/Components/Student/Instructions.js",[],"/var/www/html/react-template-hooks/src/Components/Startexam.js",["106","107","108"],"import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg} = useContext(ShowContext);\n  let history                         =   useHistory();\n\n  let [myOption, setMyOption]          = useState();\n  if(props.location.state)\n  {\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption}\n      });\n    }\n  }, [myOption]);\n\n  useEffect(() =>\n  {\n    window.addEventListener('blur', onBlur);\n    window.myParameter    = props;\n    window.setShow        = setShow;\n    window.setMsg         = setMsg;\n    window.myHistory      = history;\n    return () =>\n    {\n      window.removeEventListener('blur', onBlur);\n      window.myParameter    = '';\n      window.setShow        = '';\n      window.setMsg         = '';\n      window.myHistory      = '';\n    };\n  });\n\n  return (\n    props.location.state ?\n      <div className=\"row\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Exam Name: {props.location.state.exam.paper.paper_name}</b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\"></i> &nbsp;&nbsp;\n                      <MyTimer data={props} />\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n              <QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>\n              <hr/>\n              <div className=\"col-lg-12 row\">\n                <PreviousButton data={props} setMyOption={setMyOption}/>\n                <NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption}/>\n                <EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>\n                <ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n            <QuestionButtons qas={props}/>\n            <OverallSummery data={props}/>\n          </div>\n      </div> : null\n  );\n}\n\nconst onBlur = async (evt) =>\n{\n  const exam                    = evt.currentTarget.myParameter.location.state.exam;\n  const total_allowable_alerts  = evt.currentTarget.myParameter.location.state.exam.paper.exam_switch_alerts;\n  let history                   = evt.currentTarget.myHistory;\n\n  const ExamId                  = exam.id;\n  const setShow                 = evt.currentTarget.setShow;\n  const setMsg                  = evt.currentTarget.setMsg;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setShow,setMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        alert('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        alert('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setShow,setMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setShow(true);\n      setMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    originalSelectedOptions[index] = question.stdanswer\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","/var/www/html/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/Options.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/var/www/html/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/var/www/html/react-template-hooks/src/AlertDismissible.js",[],"/var/www/html/react-template-hooks/src/api.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":36,"column":6,"nodeType":"115","endLine":36,"endColumn":16,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":149,"column":34,"nodeType":"119","messageId":"120","endLine":149,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":159,"column":34,"nodeType":"119","messageId":"120","endLine":159,"endColumn":36},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.","ArrayExpression",["123"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"126","text":"127"},[1301,1311],"[myOption, questionIndex]"]