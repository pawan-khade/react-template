[{"/home/pawan/Desktop/react-template-hooks/src/index.js":"1","/home/pawan/Desktop/react-template-hooks/src/App.js":"2","/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js":"3","/home/pawan/Desktop/react-template-hooks/src/api.js":"4","/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js":"5","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js":"6","/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js":"7","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js":"8","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js":"9","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js":"10","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js":"11","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js":"12","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js":"13","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js":"14","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js":"15","/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js":"16","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"17","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js":"18","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js":"19","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js":"20","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js":"21","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js":"22","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js":"24","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js":"25","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js":"26","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js":"27","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js":"28","/home/pawan/Desktop/react-template-hooks/src/popup.js":"29","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js":"30","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js":"31","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js":"32","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js":"33","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js":"34","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js":"35","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js":"36","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js":"37","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js":"38","/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js":"39","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js":"40","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js":"41"},{"size":199,"mtime":1610375291000,"results":"42","hashOfConfig":"43"},{"size":3399,"mtime":1611809611822,"results":"44","hashOfConfig":"43"},{"size":434,"mtime":1610102374000,"results":"45","hashOfConfig":"43"},{"size":143,"mtime":1610371769000,"results":"46","hashOfConfig":"43"},{"size":4399,"mtime":1611810550858,"results":"47","hashOfConfig":"43"},{"size":2856,"mtime":1611926524444,"results":"48","hashOfConfig":"43"},{"size":5390,"mtime":1611921540942,"results":"49","hashOfConfig":"43"},{"size":1187,"mtime":1611811622336,"results":"50","hashOfConfig":"43"},{"size":1068,"mtime":1611394431189,"results":"51","hashOfConfig":"43"},{"size":8967,"mtime":1612350676175,"results":"52","hashOfConfig":"43"},{"size":8178,"mtime":1612416191496,"results":"53","hashOfConfig":"43"},{"size":8196,"mtime":1612413845953,"results":"54","hashOfConfig":"43"},{"size":6859,"mtime":1612414748848,"results":"55","hashOfConfig":"43"},{"size":3410,"mtime":1611814970141,"results":"56","hashOfConfig":"43"},{"size":379,"mtime":1611403745246,"results":"57","hashOfConfig":"43"},{"size":4582,"mtime":1612007403961,"results":"58","hashOfConfig":"43"},{"size":2757,"mtime":1611118230139,"results":"59","hashOfConfig":"43"},{"size":2811,"mtime":1612257650542,"results":"60","hashOfConfig":"43"},{"size":9177,"mtime":1612415738018,"results":"61","hashOfConfig":"43"},{"size":2085,"mtime":1611406299706,"results":"62","hashOfConfig":"43"},{"size":1614,"mtime":1612257727701,"results":"63","hashOfConfig":"43"},{"size":3012,"mtime":1610529484000,"results":"64","hashOfConfig":"43"},{"size":4088,"mtime":1610380881000,"results":"65","hashOfConfig":"43"},{"size":2117,"mtime":1612415270209,"results":"66","hashOfConfig":"43"},{"size":2626,"mtime":1611814243578,"results":"67","hashOfConfig":"43"},{"size":454,"mtime":1611323235969,"results":"68","hashOfConfig":"43"},{"size":6135,"mtime":1611931479145,"results":"69","hashOfConfig":"43"},{"size":4970,"mtime":1611323508452,"results":"70","hashOfConfig":"43"},{"size":951,"mtime":1611738624378,"results":"71","hashOfConfig":"43"},{"size":6154,"mtime":1611738257126,"results":"72","hashOfConfig":"43"},{"size":4248,"mtime":1611737997386,"results":"73","hashOfConfig":"43"},{"size":459,"mtime":1611559269161,"results":"74","hashOfConfig":"43"},{"size":1195,"mtime":1611585258619,"results":"75","hashOfConfig":"43"},{"size":8950,"mtime":1612353870398,"results":"76","hashOfConfig":"43"},{"size":7927,"mtime":1610102374000,"results":"77","hashOfConfig":"43"},{"size":5040,"mtime":1612355818002,"results":"78","hashOfConfig":"43"},{"size":1260,"mtime":1611923776534,"results":"79","hashOfConfig":"43"},{"size":1849,"mtime":1612353593650,"results":"80","hashOfConfig":"43"},{"size":2392,"mtime":1612176576265,"results":"81","hashOfConfig":"43"},{"size":1710,"mtime":1612260609047,"results":"82","hashOfConfig":"43"},{"size":427,"mtime":1612353636668,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1iupvn5",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/pawan/Desktop/react-template-hooks/src/index.js",[],["174","175"],"/home/pawan/Desktop/react-template-hooks/src/App.js",[],"/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js",[],"/home/pawan/Desktop/react-template-hooks/src/api.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js",["176","177","178","179"],"import React, { useState , useEffect, useContext } from 'react';\nimport LoginButton from '../Components/LoginButton';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {ShowContext} from '../App';\nimport API from '../api';\n\nfunction Header()\n{\n    const {setShow,setMsg} = useContext(ShowContext);\n\n    let history                         =   useHistory();\n    let location                        =   useLocation();\n    let [toggle, setToggle]             =   useState(true);\n    let [isLoggedIn, setIsLoggedIn]     =   useState(false);\n    let [isStartExam, setIsStartExam]   =   useState(false);\n    let [isLoaded,setIsLoaded]          =   useState(false);\n    let myHeader                        =   useHeader(setIsLoaded);\n\n    useEffect(() =>\n    {\n      let PathName = location.pathname;\n      const searchString = process.env.REACT_APP_NON_AUTH_PATHS.split(' ').find((str) => str === PathName);\n      if(PathName==='/startexam')\n      {\n        if(window.innerWidth < 1000)\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.remove('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n        }\n        else\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n        }\n      }\n      else\n      {\n        setIsStartExam(false);\n        setToggle(false);\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n      }\n      if(PathName!==searchString)\n      {\n          setIsLoggedIn(true);\n      }\n      else\n      {\n          setIsLoggedIn(false);\n      }\n\n      if(PathName === '/login')\n      {\n        document.body.classList.add('bg-primary');\n        setToggle(true);\n        document.body.classList.remove('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n      }\n      else\n      {\n        document.body.classList.remove('bg-primary');\n      }\n    },[location,history,setShow,setMsg]);\n\n\n    return(\n          !isStartExam ?\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href={void(0)}><img src=\"assets/images/logo.png\" height=\"50\" width=\"50\"></img> {myHeader}</a>\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={() => {toggleSidebar(setToggle,toggle)}}><i className=\"fas fa-bars\"></i></button>\n\n               <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n                     {/*<div className=\"input-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                        </div>\n                    </div>*/}\n                </form>\n                { isLoggedIn ? <LoginButton url={'/logout'} label={'Logout'} setIsLoggedIn={setIsLoggedIn}/>: null}\n            </nav>\n            : null\n    );\n}\n\nfunction toggleSidebar(setToggle,toggle)\n{\n    setToggle(!toggle);\n    if(!toggle)\n    {\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n    }\n    else\n    {\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n    }\n}\n\n\n\nfunction useHeader(setIsLoaded)\n{\n    let [myHeader,setMyHeader]          =   useState('GudExams');\n\n    useEffect(() =>\n    {\n        getHeaderData();\n    },[]);\n    \n    async function getHeaderData()\n    {\n        await API.get('/configurations',{params :{\"type\":\"headerconfig\"}})\n        .then(function (res) \n        {\n            if(res.data.status === 'success')\n            {\n                setMyHeader(res.data.header);\n                setIsLoaded(true);\n            }\n            else\n            {\n                setMyHeader('GudExams');\n                setIsLoaded(true);\n            }\n        })\n        .catch(function (error) \n        {\n            setMyHeader('GudExams');\n            setIsLoaded(true);\n        })\n    }\n\n    return myHeader\n}\n\nexport default Header;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js",["180","181"],"import React, { useContext } from 'react';\nimport {UserContext} from '../App';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() \n{\n    const {currentUser, setCurrentUser}   = useContext(UserContext);\n\n    if(currentUser && currentUser.role === 'STUDENT')\n    {\n        return (\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                    <div className=\"sb-sidenav-menu\">\n                        <div className=\"nav\">\n                            <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                            <Link className=\"nav-link\" to={{pathname: \"/studenthome\"}}>\n                                <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                Home\n                            </Link>\n                        </div>\n                    </div>\n                </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'ADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminhome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n\n                        <a className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseConfigurations\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-cogs\"></i></div>\n                                Configurations\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseConfigurations\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                            <nav className=\"sb-sidenav-menu-nested nav\">\n                                <Link className=\"nav-link\" to={{pathname: \"/configHeader\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Header\n                                </Link>\n                                <Link className=\"nav-link\" to={{pathname: \"/configFooter\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Footer\n                                </Link>\n                            </nav>\n                        </div>\n\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'EADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/insthome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/instreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\" aria-hidden=\"true\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Sidebar;","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js",["182"],"import React, { useContext } from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\n\nfunction LoginButton(props)\n{\n  let history                                     =   useHistory(props);\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        setCurrentUser(undefined);\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js",["183","184","185"],"import React, { useState , useEffect, useContext, createRef } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../api';\nimport ReCAPTCHA   from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nwindow.recaptchaOptions = {\n    useRecaptchaNet: true,\n  };\n\nexport default function Login(props)\n{\n  const {currentUser, setCurrentUser}               =    useContext(UserContext);\n  let history                                       =    useHistory();\n  const [myRecaptcha, setMyRecaptcha]               =    useState();\n  const [myMsg, setMyMsg]                           =    useState();\n  let [loading, setLoading]                         =    useState(true);\n  const flag                                        =    useFlag(setLoading);\n  const siteKey                                     =    process.env.REACT_APP_CAPTCHA_SITE_KEY;\n  const recaptchaRef                                =    createRef();\n\n  return (\n    !loading ?\n        flag !== undefined && <Formik\n        initialValues={{ username: \"\", password: \"\", flag:flag ,instId:\"\" }}\n        onSubmit={(values,{ setSubmitting }) =>\n        {\n          if (myRecaptcha !== undefined){\n            checkLogin(values.username,values.password,values.instId,flag,myRecaptcha,setMyMsg,history,setCurrentUser,recaptchaRef);\n          }\n        }}\n        validationSchema={Yup.object().shape({\n            username:Yup.string()\n            .required(\"Username Required\"),\n            password: Yup.string()\n            .required(\"Password is Required\"),\n            flag: Yup.number(),\n            instId: Yup.string().when('flag', {\n              is:0,\n              then: Yup.string().required(\"Inst ID is Required\")\n            })\n        })}\n    >\n    {\n        props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props;\n            return (\n\n                <div style={{marginBottom:\"30px\"}}>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-5\">\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">GudExams Login</h3></div>\n                                    <div className=\"card-body\" >\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <label>User Name</label>\n\n                                                <input className=\"form-control py-4\" id=\"username\" type=\"text\"\n                                                value ={values.userame}\n                                                placeholder=\"Enter User Name\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.username && touched.username && \"error\"}\n                                                />\n\n                                                {errors.username && touched.username && (\n                                                    <div className=\"alert alert-info\">{errors.username}</div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-group\">Password</label>\n\n                                                <input className=\"form-control py-4\" id=\"password\" type=\"password\"\n                                                value ={values.password}\n                                                placeholder=\"Enter password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.password && touched.password && \"error\"}\n                                                />\n\n                                                {errors.password && touched.password && (\n                                                    <div className=\"alert alert-info\">{errors.password}</div>\n                                                )}\n                                            </div>\n\n                                            {flag === 0 && (<div className=\"form-group\">\n                                                <label className=\"form-group\">Inst ID</label>\n\n                                                <input className=\"form-control py-4\" id=\"instId\" type=\"instId\"\n                                                value ={values.instId}\n                                                placeholder=\"Enter Institute ID\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.instId && touched.instId && \"error\"}\n                                                />\n\n                                                {errors.instId && touched.instId && (\n                                                    <div className=\"alert alert-info\">{errors.instId}</div>\n                                                )}\n                                            </div>)}\n\n                                            <ReCAPTCHA name=\"myRecaptcha\" id=\"myRecaptcha\" size=\"compact\" sitekey={siteKey} badge=\"inline\" onChange={(value) => setMyRecaptcha(value)} ref={recaptchaRef}/>\n\n                                            <div className=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                                <button className=\"btn btn-primary\" type=\"submit\" id=\"submit\">Login</button>\n                                            </div><br/>\n\n                                            {myMsg !== undefined && (\n                                                <div className=\"alert alert-success\">{myMsg}</div>\n                                            )}\n\n                                        </form>\n                                    </div>\n                                    <div className=\"card-footer text-center\">\n                                        <div className=\"small\"><a href=\"/register\">Need an account? Sign up!</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            );\n        }\n    }\n    </Formik>\n    :\n    <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"40%\"}}>\n        <ClipLoader color={'#ff0000'} loading={loading} size={100} />\n    </div>\n  );\n}\n\nasync function checkLogin(username,password,instId,flag,myRecaptcha,setMyMsg,history,setCurrentUser,recaptchaRef)\n{\n    await API.post('/login',{\"username\":username,\"password\":password,\"inst_id\":instId,\"flag\":flag,\"myRecaptcha\":myRecaptcha}).then(res =>\n    {\n            if(res.data.status === 'success')\n            {\n                localStorage.setItem(\"token\",JSON.stringify(res.data.token));\n                if(res.data.data.role === 'STUDENT')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/studenthome',state:{currentUser: res.data.data}});\n                }\n                else if(res.data.data.role === 'ADMIN')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/adminhome',state:{currentUser: res.data.data}});\n                }\n                else if(res.data.data.role === 'EADMIN')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/insthome',state:{currentUser: res.data.data}});\n                }\n            }\n            else\n            {\n                recaptchaRef.current.reset();\n                setMyMsg(res.data.message);\n            }\n    })\n}\n\n\n\nfunction useFlag(setLoading)\n{\n    const [flag, setFlag]   =    useState();\n\n    useEffect(() => {updateFlag();}, []);\n\n    async function updateFlag()\n    {\n        setLoading(true);\n        const res = await API.get('/settings',{params: {\"type\":\"login\"}});\n        if(res.data.status==='success')\n        {\n            setFlag(res.data.flag);\n            setLoading(false);\n        }\n    }\n\n    return flag;\n}\n","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js",["186","187","188","189","190"],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js",["191"],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js",["192"],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js",["193"],"import React, { useState,useEffect, useContext } from 'react';\nimport Webcam from \"react-webcam\";\nimport { useHistory } from 'react-router-dom';\nimport {PopupContext} from '../../App';\nimport API from '../../api';\n\nconst CaptureTime = process.env.REACT_APP_PHOTO_CAPTURE_TIME * 1000;\n\nconst WebCamCapture = (props) => {\n    const webcamRef                         = React.useRef(null);\n    const [imgSrc, setimgSrc]               = useState(null);\n    const videoConstraints                  = {facingMode: \"user\"};\n    let history                             = useHistory();\n    const {setPopupShow,setPopupMsg}        = useContext(PopupContext);\n    const exam                              = props.exam;\n    \n    const capture                = React.useCallback(\n    () => \n        { \n          if(webcamRef)\n          {\n              const imageSrc           = webcamRef.current.getScreenshot();\n              setimgSrc(imageSrc);  \n              storeSnap(exam,imageSrc);\n          }\n        },\n        [webcamRef,setimgSrc,exam]\n    );\n\n    useEffect(() => {    \n        navigator.mediaDevices.getUserMedia({ video: true, voice: true })\n        .then(function(stream) \n        {\n            props.setMyCameraPerm(true);\n        })\n        .catch(function(err) \n        {\n            props.setMyCameraPerm(false);\n            setPopupShow(true);\n            setPopupMsg('Without Camera Premission Examination can not be started.');\n            history.replace('/studenthome');\n        });\n        let myCapture = setInterval(capture, CaptureTime);\n\n        //------------------Cleanup-----------------------------------------\n        return () => {\n            clearInterval(myCapture);\n        }\n        //------------------------------------------------------------------\n    },[history.location,capture,history,props,setPopupMsg,setPopupShow]);   \n  \n    return (\n        <div className=\"col-lg-12\" style={{margin:\"20px\"}}>\n            <center>\n                <Webcam\n                audio={false}\n                height={400}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={300}\n                videoConstraints={videoConstraints}\n                screenshotQuality={\"1\"}\n                />\n            </center>\n        </div>\n    );\n  };    \n\n  async function storeSnap(exam,image)\n  {\n    await API.post('/proctor/',{\"type\": \"snapshot\",\"exam\":exam,\"image\":image})\n    .then((res) => {\n        console.log('snap stored successfully');\n    })\n    .catch((error) =>\n    {\n        console.log('problem storing snapshot');\n    });\n  }\n\n  export default WebCamCapture;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js",[],"/home/pawan/Desktop/react-template-hooks/src/popup.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js",["194","195"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport API from '../../../api';\nimport Axios from 'axios';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Moment from 'react-moment';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {ShowContext} from '../../../App';\n\n\nfunction InstExamReport(props)\n{\n    const {setShow,setMsg}                          =   useContext(ShowContext);\n    const [allPapers, setAllPapers]                 =   useState([]);\n    const [allExams, setAllExams]                   =   useState([]);\n    let [loading, setLoading]                       =   useState(true);\n    const header                                    =   getHeader(allExams);\n    const data                                      =   getData(allPapers,allExams,props);\n    const options = {\n        sizePerPageList: [\n            {\n                text: '5', value: 5\n            }, \n            {\n                text: '10', value: 10\n            }, \n            {\n                text: '50', value: 50\n            },\n            {\n                text: '500', value: 500\n            }, \n            {\n                text: '1000', value: 1000\n            }, \n            {\n                text: '10000', value: 10000\n            }\n        ]\n    };\n   \n    useEffect(() => \n    {\n        getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props);\n    },[props.instId,props,setMsg,setShow]);\n\n    return (\n    allPapers.length > 0 && !loading ?\n      <div>\n        <div className=\"container-fluid\">\n            {(props.role==='' || props.role===undefined) &&(<h1 className=\"mt-4\">Institute Examination Report</h1>)}\n            {(props.role==='' || props.role===undefined) &&(<ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Institute Examination Report</li>\n            </ol>)}<br/>\n            <div className=\"row col-lg-12\" style={{overflow:\"auto\"}}>\n                \n                <BootstrapTable keyField='srno' data={ data } columns={ header } filter={ filterFactory() } pagination={ paginationFactory(options) }/>\n            </div>\n        </div>\n      </div>\n      : <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n            <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n        </div>\n    );\n}\n\nfunction getHeader(allExams)\n{\n    let myHeader = [\n        { text: 'Sr No', dataField: 'srno'},\n        { text: 'Date & Start Time', dataField: 'datenstarttime',filter: textFilter()},\n        { text: 'Code', dataField: 'code',filter: textFilter()},\n        { text: 'Subject Name', dataField: 'subjectname',filter: textFilter()},\n        { text: 'Marks', dataField: 'marks'},\n        { text: 'Total Q\\'s', dataField: 'totquestions'},\n        { text: 'Duration', dataField: 'duration'},\n        { text: 'Total Students', dataField: 'totstud'},\n        { text: 'Total End', dataField: 'totend'},\n        { text: 'Total Inprogress', dataField: 'totinprogress'},\n        { text: 'Total Not Attend', dataField: 'totnotattend'},\n    ];\n    return myHeader;\n}\n\nfunction getData(allPapers,allExams,props)\n{\n    let myData = [];\n    let i = 1;\n\n    allPapers.map((data, index) => {\n        console.log('index:'+index+' Data:'+allExams[index]);\n        let paper_name = (props.role==='ADMIN') ?  <Link to={{pathname: '/instructions',state: {exam:allExams[index],role:'ADMIN'}}}>{data.paper_name}</Link> :  data.paper_name ;\n\n        myData.push({\n            srno                    : i++,\n            datenstarttime          : <Moment format=\"YYYY-MM-DD H:mm:ss\">{data.from_date}</Moment>,\n            code                    : data.paper_code,\n            subjectname             : paper_name,\n            marks                   : data.marks,\n            totquestions            : data.questions,\n            duration                : data.durations,\n            totstud                 : getCount(allExams,'total',data.id),\n            totend                  : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'over',paper_code:data.paper_code}}}> {getCount(allExams,'end',data.id)}</Link>,\n            totinprogress           : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'inprogress',paper_code:data.paper_code}}}> {getCount(allExams,'inprogress',data.id)}  </Link>,\n            totnotattend            : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'notattend',paper_code:data.paper_code}}}>{getCount(allExams,'notattend',data.id)} </Link>\n        })   \n    })\n\n    return myData;\n}\n\nasync function getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props)\n{\n    let allPapers = [];\n    let allExams  = [];\n    let res       = [];\n    if(props.role==='ADMIN')\n    {\n        if(props.instId === '')\n        {\n            setMsg('Please Select Institute to get its report...');\n            setShow(true);\n            setAllPapers([]);\n            setAllExams([]);\n        }\n        console.log(props.instId);\n        res = await API.get('/program/'+props.instId);\n    }\n    else\n    {\n        res = await API.get('/program');\n    }\n        if(res.data.status==='success')\n        {\n            if(res.data.data.length > 0)\n            {\n                console.log(res.data.data.length);\n                for(let i=0;i<res.data.data.length;i++)\n                {\n                    await Axios.all([\n                            API.get('/paper',{ params: {\"program_id\":res.data.data[i].id}}),\n                            API.get('/exam/'+res.data.data[i].id,{ params: {\"type\":\"byprogramid\"}})\n                    ])\n                    .then(responseArr => \n                    {\n                        if(responseArr[0].data.status==='success')\n                        {\n                            if(responseArr[0].data.data.length > 0)\n                            {\n                                allPapers.push(...responseArr[0].data.data);\n                            }\n                        }   \n                        \n                        if(responseArr[1].data.status==='success')\n                        {\n                            if(responseArr[1].data.data.length > 0)\n                            {\n                                allExams.push(...responseArr[1].data.data);\n                            }\n                        }\n                    });\n                }\n                allPapers = [...allPapers];\n                allPapers = [...new Set(allPapers)];\n\n                allPapers.sort(function(a,b)\n                {\n                    return a.from_date - b.from_date;\n                });\n                \n                if(allPapers.length > 0 && allExams.length > 0)\n                {\n                    setAllPapers(allPapers);\n                    setAllExams(allExams);\n                    setLoading(false);\n                } \n            }\n            else\n            {\n                setAllPapers([]);\n                setAllExams([]);\n                setShow(true);\n                setMsg('No Program Data found for this Institute.Please Add data or Configure it Properly...');\n                setLoading(false);\n            }\n        }\n        else\n        {\n            setAllPapers([]);\n            setAllExams([]);\n            setShow(true);\n            setMsg('Problem fetching data from Server...');\n            setLoading(false);\n        }\n}\n\nfunction getCount(allExams,str,paper_id)\n{\n    let total=0;\n    let end=0;\n    let inprogress=0;\n    let absent=0;\n\n    if(str === 'total')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id))\n            {\n                total++;\n            }\n        }\n        return total;\n    }\n    else if(str === 'end')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'over')\n            {\n                end++;\n            }\n        }\n        return end;\n    }\n    else if(str === 'inprogress')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'inprogress')\n            {\n                inprogress++;\n            }\n        }\n        return inprogress;\n    }\n    else if(str === 'notattend')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === '')\n            {\n                absent++;\n            }\n        }\n        return absent;\n    }\n}\n\nexport default InstExamReport;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js",["196"],"import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction SearchBox(props)\n{\n    return (\n    <>  \n        <Formik\n            initialValues={{ searchSubject:\"\"}}\n            onSubmit={(values,{ setSubmitting }) =>\n            {\n                props.getExamData(props.setUserRequest,props.setLoading,values.searchSubject);\n            }}\n            validationSchema={Yup.object().shape({\n                searchSubject:Yup.string()\n                .required(\"Subject Name is Required...\")\n            })}\n            >\n            {\n                props => \n                {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    } = props;\n\n                    return (\n                        <div className=\"col-lg-2\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"input-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        type=\"text\" \n                                        name=\"searchSubject\" \n                                        id=\"searchSubject\" \n                                        placeholder=\"Subjects...\"\n                                        value ={values.searchSubject}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                    />\n                                    <div className=\"input-group-append\">\n                                    <button type=\"button\" className=\"btn btn-primary\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                                    </div>\n                                    {errors.searchSubject && touched.searchSubject && (\n                                        <div className=\"alert alert-info col-lg-12\">{errors.searchSubject}</div>\n                                    )}\n                                </div>\n                            </form>\n                        </div>\n                    );\n                }\n            }\n        </Formik>\n    </>\n    );\n}\n\nexport default SearchBox;","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":16,"column":10,"nodeType":"203","messageId":"204","endLine":16,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":69,"column":17,"nodeType":"207","endLine":69,"endColumn":60},{"ruleId":"208","severity":1,"message":"209","line":69,"column":60,"nodeType":"207","endLine":69,"endColumn":117},{"ruleId":"210","severity":1,"message":"211","line":108,"column":7,"nodeType":"212","endLine":108,"endColumn":9,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"214","line":7,"column":25,"nodeType":"203","messageId":"204","endLine":7,"endColumn":39},{"ruleId":"205","severity":1,"message":"206","line":41,"column":25,"nodeType":"207","endLine":41,"endColumn":174},{"ruleId":"201","severity":1,"message":"215","line":9,"column":10,"nodeType":"203","messageId":"204","endLine":9,"endColumn":21},{"ruleId":"201","severity":1,"message":"215","line":16,"column":10,"nodeType":"203","messageId":"204","endLine":16,"endColumn":21},{"ruleId":"201","severity":1,"message":"216","line":53,"column":17,"nodeType":"203","messageId":"204","endLine":53,"endColumn":29},{"ruleId":"210","severity":1,"message":"217","line":184,"column":38,"nodeType":"212","endLine":184,"endColumn":40,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"219","line":45,"column":6,"nodeType":"212","endLine":45,"endColumn":22,"suggestions":"220"},{"ruleId":"210","severity":1,"message":"221","line":55,"column":6,"nodeType":"212","endLine":55,"endColumn":16,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"223","line":68,"column":6,"nodeType":"212","endLine":68,"endColumn":22,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":195,"column":34,"nodeType":"227","messageId":"228","endLine":195,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":212,"column":34,"nodeType":"227","messageId":"228","endLine":212,"endColumn":36},{"ruleId":"201","severity":1,"message":"214","line":13,"column":23,"nodeType":"203","messageId":"204","endLine":13,"endColumn":37},{"ruleId":"210","severity":1,"message":"229","line":34,"column":6,"nodeType":"212","endLine":34,"endColumn":22,"suggestions":"230"},{"ruleId":"201","severity":1,"message":"231","line":11,"column":12,"nodeType":"203","messageId":"204","endLine":11,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":92,"column":33,"nodeType":"227","messageId":"228","endLine":92,"endColumn":35},{"ruleId":"232","severity":1,"message":"233","line":146,"column":27,"nodeType":"227","messageId":"234","endLine":163,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":47,"column":87,"nodeType":"237","endLine":47,"endColumn":100},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHeaderData'. Either include it or remove the dependency array.","ArrayExpression",["240"],"'setCurrentUser' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFlag'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'history', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'history', 'props', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["244"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["245"],"'imgSrc' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'allPapers'.","unsafeRefs","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [getHeaderData]",{"range":"258","text":"259"},"Update the dependencies array to be: [updateFlag]",{"range":"260","text":"261"},"Update the dependencies array to be: [history, props.location, setMsg, setShow]",{"range":"262","text":"263"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"264","text":"265"},"Update the dependencies array to be: [history, props, props.location, setPopupMsg, setPopupShow]",{"range":"266","text":"267"},"Update the dependencies array to be: [myExam, history, location.state]",{"range":"268","text":"269"},[3771,3773],"[getHeaderData]",[8669,8671],"[updateFlag]",[1903,1919],"[history, props.location, setMsg, setShow]",[2081,2091],"[myOption, questionIndex]",[2512,2528],"[history, props, props.location, setPopupMsg, setPopupShow]",[799,815],"[myExam, history, location.state]"]