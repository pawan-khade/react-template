[{"/home/pawan/Desktop/react-template-hooks/src/index.js":"1","/home/pawan/Desktop/react-template-hooks/src/App.js":"2","/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js":"3","/home/pawan/Desktop/react-template-hooks/src/api.js":"4","/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js":"5","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js":"6","/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js":"7","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js":"8","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js":"9","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js":"10","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js":"11","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js":"12","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js":"13","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js":"14","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js":"15","/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js":"16","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"17","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js":"18","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js":"19","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js":"20","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js":"21","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js":"22","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js":"24","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js":"25","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js":"26","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js":"27","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js":"28"},{"size":199,"mtime":1610375291000,"results":"29","hashOfConfig":"30"},{"size":2035,"mtime":1610781067939,"results":"31","hashOfConfig":"30"},{"size":434,"mtime":1610102374000,"results":"32","hashOfConfig":"30"},{"size":143,"mtime":1610371769000,"results":"33","hashOfConfig":"30"},{"size":3134,"mtime":1610607083130,"results":"34","hashOfConfig":"30"},{"size":1530,"mtime":1610787555905,"results":"35","hashOfConfig":"30"},{"size":2666,"mtime":1610788954495,"results":"36","hashOfConfig":"30"},{"size":533,"mtime":1610102374000,"results":"37","hashOfConfig":"30"},{"size":864,"mtime":1610377536000,"results":"38","hashOfConfig":"30"},{"size":7841,"mtime":1610789258234,"results":"39","hashOfConfig":"30"},{"size":6875,"mtime":1610709090983,"results":"40","hashOfConfig":"30"},{"size":3863,"mtime":1611035134193,"results":"41","hashOfConfig":"30"},{"size":4780,"mtime":1610543716000,"results":"42","hashOfConfig":"30"},{"size":2455,"mtime":1610380543000,"results":"43","hashOfConfig":"30"},{"size":355,"mtime":1610102374000,"results":"44","hashOfConfig":"30"},{"size":4543,"mtime":1610523103000,"results":"45","hashOfConfig":"30"},{"size":2757,"mtime":1610607461093,"results":"46","hashOfConfig":"30"},{"size":2338,"mtime":1610102374000,"results":"47","hashOfConfig":"30"},{"size":7807,"mtime":1610380544000,"results":"48","hashOfConfig":"30"},{"size":1867,"mtime":1610380129000,"results":"49","hashOfConfig":"30"},{"size":1535,"mtime":1610102374000,"results":"50","hashOfConfig":"30"},{"size":3012,"mtime":1610529484000,"results":"51","hashOfConfig":"30"},{"size":4088,"mtime":1610380881000,"results":"52","hashOfConfig":"30"},{"size":1858,"mtime":1610525160000,"results":"53","hashOfConfig":"30"},{"size":2459,"mtime":1610708746078,"results":"54","hashOfConfig":"30"},{"size":906,"mtime":1611029904705,"results":"55","hashOfConfig":"30"},{"size":4231,"mtime":1611033648461,"results":"56","hashOfConfig":"30"},{"size":4575,"mtime":1611035834408,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1iupvn5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pawan/Desktop/react-template-hooks/src/index.js",[],["120","121"],"/home/pawan/Desktop/react-template-hooks/src/App.js",[],"/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js",[],"/home/pawan/Desktop/react-template-hooks/src/api.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js",["122"],"import React, { useState , useEffect, useContext } from 'react';\nimport LoginButton from '../Components/LoginButton';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {ShowContext} from '../App';\n\n\nfunction Header()\n{\n    const {setShow,setMsg} = useContext(ShowContext);\n\n    let history                         =   useHistory();\n    let location                        =   useLocation();\n    let [toggle, setToggle]             =   useState(true);\n    let [isLoggedIn, setIsLoggedIn]     =   useState(false);\n    let [isStartExam, setIsStartExam]   =   useState(false);\n\n    useEffect(() =>\n    {\n      let PathName = location.pathname;\n      const searchString = process.env.REACT_APP_NON_AUTH_PATHS.split(' ').find((str) => str === PathName);\n      if(PathName==='/startexam')\n      {\n        if(window.innerWidth < 1000)\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.remove('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n        }\n        else\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n        }\n      }\n      else\n      {\n        setIsStartExam(false);\n        setToggle(false);\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n      }\n      if(PathName!==searchString)\n      {\n          setIsLoggedIn(true);\n      }\n      else\n      {\n          setIsLoggedIn(false);\n      }\n    },[location,history,setShow,setMsg]);\n\n\n    return(\n          !isStartExam ?\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href={void(0)}>GudExams</a>\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={() => {toggleSidebar(setToggle,toggle)}}><i className=\"fas fa-bars\"></i></button>\n\n                <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n                    <div className=\"input-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                        </div>\n                    </div>\n                </form>\n                { isLoggedIn ? <LoginButton url={'/logout'} label={'Logout'} setIsLoggedIn={setIsLoggedIn}/>: <LoginButton url={'/login'} label={'Login'}/>}\n            </nav>\n            : null\n    );\n}\n\nfunction toggleSidebar(setToggle,toggle)\n{\n    setToggle(!toggle);\n    if(!toggle)\n    {\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n    }\n    else\n    {\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n    }\n}\n\nexport default Header;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js",["123"],"import React, { useContext } from 'react';\nimport {UserContext} from '../App';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() \n{\n    const {userType, setUserType}   = useContext(UserContext);\n\n    if(userType === 'STUDENT')\n    {\n        return (\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                    <div className=\"sb-sidenav-menu\">\n                        <div className=\"nav\">\n                            <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                            <Link className=\"nav-link\" to={{pathname: \"/studenthome\", \n                            state:{ userType:'STUDENT' }}}>\n                                <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                Home\n                            </Link>\n                        </div>\n                    </div>\n                </nav>\n        );\n    }\n    else if(userType === 'ADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminhome\", \n                        state:{ userType:'ADMIN' }}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\", \n                        state:{ userType:'ADMIN' }}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Sidebar;","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Login.js",["124"],"import React, { useState , useEffect, useContext  } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../api';\nimport ReCAPTCHA   from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\n\nexport default function Login(props)\n{\n  const {userType, setUserType}                    = useContext(UserContext);\n  let history                                      = useHistory();\n  const [flag, setFlag]                            =   useState();\n  const [myRecaptcha, setMyRecaptcha]              =   useState();\n  const [myMsg, setMyMsg]                          =   useState();\n\n  useEffect(() => {updateFlag(setFlag);}, []);\n\n  return (\n    flag !== undefined && <Formik\n        initialValues={{ username: \"\", password: \"\", flag:flag ,instId:\"\" }}\n        onSubmit={(values,{ setSubmitting }) =>\n        {\n          if (myRecaptcha !== undefined){\n            checkLogin(values.username,values.password,values.instId,flag,myRecaptcha,setMyMsg,history,setUserType);\n          }\n        }}\n        validationSchema={Yup.object().shape({\n            username:Yup.string()\n            .required(\"Username Required\"),\n            password: Yup.string()\n            .required(\"Password is Required\"),\n            flag: Yup.number(),\n            instId: Yup.string().when('flag', {\n              is:0,\n              then: Yup.string().required(\"Inst ID is Required\")\n            })\n        })}\n    >\n    {\n        props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props;\n            return (\n\n                <div>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-5\">\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">GudExams Login</h3></div>\n                                    <div className=\"card-body\" >\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <label>User Name</label>\n\n                                                <input className=\"form-control py-4\" id=\"username\" type=\"text\"\n                                                value ={values.userame}\n                                                placeholder=\"Enter User Name\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.username && touched.username && \"error\"}\n                                                />\n\n                                                {errors.username && touched.username && (\n                                                    <div className=\"alert alert-info\">{errors.username}</div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-group\">Password</label>\n\n                                                <input className=\"form-control py-4\" id=\"password\" type=\"password\"\n                                                value ={values.password}\n                                                placeholder=\"Enter password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.password && touched.password && \"error\"}\n                                                />\n\n                                                {errors.password && touched.password && (\n                                                    <div className=\"alert alert-info\">{errors.password}</div>\n                                                )}\n                                            </div>\n\n                                            {flag === 0 && (<div className=\"form-group\">\n                                                <label className=\"form-group\">Inst ID</label>\n\n                                                <input className=\"form-control py-4\" id=\"instId\" type=\"instId\"\n                                                value ={values.instId}\n                                                placeholder=\"Enter Institute ID\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.instId && touched.instId && \"error\"}\n                                                />\n\n                                                {errors.instId && touched.instId && (\n                                                    <div className=\"alert alert-info\">{errors.instId}</div>\n                                                )}\n                                            </div>)}\n\n                                            <ReCAPTCHA name=\"myRecaptcha\" id=\"myRecaptcha\" sitekey=\"6LceEOcZAAAAAIc_LC_IgqVWIAEiB1PriQGqMtc5\" onChange={(value) => setMyRecaptcha(value)}/>\n\n                                            <div className=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                                <button className=\"btn btn-primary\" type=\"submit\" id=\"submit\" disabled={isSubmitting}>Login</button>\n                                            </div><br/>\n\n                                            {myMsg !== undefined && (\n                                                <div className=\"alert alert-success\">{myMsg}</div>\n                                            )}\n\n                                        </form>\n                                    </div>\n                                    <div className=\"card-footer text-center\">\n                                        <div className=\"small\"><a href=\"/register\">Need an account? Sign up!</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            );\n        }\n    }\n    </Formik>\n  );\n}\n\nasync function checkLogin(username,password,instId,flag,myRecaptcha,setMyMsg,history,setUserType)\n{\n    await API.post('/login',{\"username\":username,\"password\":password,\"inst_id\":instId,\"flag\":flag,\"myRecaptcha\":myRecaptcha}).then(res =>\n    {\n        \n            if(res.data.status === 'success')\n            {\n                localStorage.setItem(\"token\",JSON.stringify(res.data.token));\n                if(res.data.data.role === 'STUDENT')\n                {\n                    setUserType('STUDENT');\n                    history.replace({ pathname: '/studenthome',state:{userType: 'STUDENT'}});\n                }\n                else if(res.data.data.role === 'ADMIN')\n                {\n                    setUserType('ADMIN');\n                    history.replace({ pathname: '/adminhome',state:{userType: 'ADMIN'}});\n                }\n            }\n            else\n            {\n                setMyMsg(res.data.message);\n            }\n    })\n}\n\nasync function updateFlag(setFlag)\n{\n  const res = await API.get('/settings',{params: {\"type\":\"login\"}});\n  if(res.data.status==='success')\n  {\n      setFlag(res.data.flag);\n  }\n}\n","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js",["125","126","127","128","129"],"import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\nimport WebCamCapture from './Exam/WebCamCapture';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg} = useContext(ShowContext);\n  let history                                     =   useHistory();\n  let [myOption, setMyOption]                     =   useState();\n  let [myPhotoCapture, setMyPhotoCapture]         =   useState(false);\n  let [myCameraPerm, setMyCameraPerm]             =   useState(false);\n\n  if(props.location.state)\n  {\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => {\n    if (props.location.state === undefined){\n      setShow(true);\n      setMsg('You are redirected because you have refreshed the examination page forcefully');\n      history.replace('/studenthome');\n    }\n  }, [props.location])\n\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption}\n      });\n    }\n  }, [myOption]);\n//----------------------Catching Opening of other window------------------------\n  useEffect(() =>\n  {\n    const onBlurCallback = () => onBlur(props, setShow, setMsg, history);\n    window.addEventListener('blur', onBlurCallback);\n    return () =>\n    {\n      window.removeEventListener('blur', onBlurCallback);\n    };\n  }, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Restraining back button of browser--------------------\n  useEffect(() => {\n  window.history.pushState(props.location.state, '', '/startexam');\n  return () =>\n    {\n      window.history.pushState(props.location.state, '', '/studenthome');\n    };\n}, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Proctoring -------------------------------------------\nuseEffect(() => {\n\n  if(props.location.state)\n  {\n    if(props.location.state.exam.paper.photo_capture)\n    {\n      setMyPhotoCapture(true);\n    }\n    else\n    {\n      setMyCameraPerm(true);\n    }\n  }\n}, [props.location]);\n//------------------------------------------------------------------------------\n\n  return (\n    props.location.state ?\n      <div className=\"row\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Exam Name: {props.location.state.exam.paper.paper_name}</b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\"></i> &nbsp;&nbsp;\n                      {myCameraPerm && (<MyTimer data={props} />)}\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n            {myCameraPerm && (<QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>)}\n              <hr/>\n              <div className=\"col-lg-12 row\">\n              {myCameraPerm && (<PreviousButton data={props} setMyOption={setMyOption}/>)}\n              {myCameraPerm && (<NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption}/>)}\n              {myCameraPerm && (<EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>)}\n              {myCameraPerm && (<ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>)}\n                {myPhotoCapture && (<WebCamCapture exam={props.location.state.exam.id} setMyCameraPerm={setMyCameraPerm}/>)}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n          {myCameraPerm && (<QuestionButtons qas={props}/>)}\n          {myCameraPerm && (<OverallSummery data={props}/>)}\n          </div>\n      </div> : null\n  );\n}\n\nasync function onBlur(props, setShow, setMsg, history)\n{\n  const exam                    = props.location.state.exam;\n  const total_allowable_alerts  = props.location.state.exam.paper.exam_switch_alerts;\n  const ExamId                  = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setShow,setMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        alert('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        alert('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setShow,setMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setShow(true);\n      setMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    originalSelectedOptions[index] = question.stdanswer\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js",["130"],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js",["131","132","133"],"import React, { useState,useEffect, useContext } from 'react';\nimport Webcam from \"react-webcam\";\nimport { useHistory } from 'react-router-dom';\nimport {ShowContext} from '../../App';\nimport API from '../../api';\n\nconst CaptureTime = process.env.REACT_APP_PHOTO_CAPTURE_TIME * 1000;\n\nconst WebCamCapture = (props) => {\n    const webcamRef             = React.useRef(null);\n    const [imgSrc, setimgSrc]   = useState(null);\n    const videoConstraints      = {facingMode: \"user\"};\n    let history                 = useHistory();\n    const {setShow,setMsg}      = useContext(ShowContext);\n    const exam = props.exam;\n    \n  \n    useEffect(() => {    \n        navigator.mediaDevices.getUserMedia({ video: true, voice: true })\n        .then(function(stream) \n        {\n            props.setMyCameraPerm(true);\n        })\n        .catch(function(err) \n        {\n            props.setMyCameraPerm(false);\n            setShow(true);\n            setMsg('Without Camera Premission Examination can not be started.');\n            history.replace('/studenthome');\n        });\n        let myCapture = setInterval(capture, CaptureTime);\n\n        //------------------Cleanup-----------------------------------------\n        return () => {\n            clearInterval(myCapture);\n        }\n        //------------------------------------------------------------------\n    },[history.location]);  \n\n    const capture                = React.useCallback(\n      () => \n      { \n        if(webcamRef)\n        {\n            const imageSrc           = webcamRef.current.getScreenshot();\n            setimgSrc(imageSrc);  \n            storeSnap(exam,imageSrc);\n        }\n      },\n      [webcamRef,setimgSrc]\n    );\n  \n    return (\n        <div className=\"col-lg-12\" style={{margin:\"20px\"}}>\n            <center>\n                <Webcam\n                audio={false}\n                height={400}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={300}\n                videoConstraints={videoConstraints}\n                screenshotQuality={\"1\"}\n                />\n            </center>\n        </div>\n    );\n  };    \n\n  async function storeSnap(exam,image)\n  {\n    await API.post('/proctor/',{\"type\": \"snapshot\",\"exam\":exam,\"image\":image})\n    .then((res) => {\n        console.log('snap stored successfully');\n    })\n    .catch((error) =>\n    {\n        console.log('problem storing snapshot');\n    });\n  }\n\n  export default WebCamCapture;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js",["134"],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js",["135","136","137"],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":56,"column":17,"nodeType":"145","endLine":56,"endColumn":60},{"ruleId":"146","severity":1,"message":"147","line":7,"column":22,"nodeType":"148","messageId":"149","endLine":7,"endColumn":33},{"ruleId":"146","severity":1,"message":"150","line":11,"column":10,"nodeType":"148","messageId":"149","endLine":11,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":38,"column":6,"nodeType":"153","endLine":38,"endColumn":22,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":48,"column":6,"nodeType":"153","endLine":48,"endColumn":16,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"157","line":58,"column":6,"nodeType":"153","endLine":58,"endColumn":22,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":177,"column":34,"nodeType":"161","messageId":"162","endLine":177,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":187,"column":34,"nodeType":"161","messageId":"162","endLine":187,"endColumn":36},{"ruleId":"146","severity":1,"message":"163","line":9,"column":7,"nodeType":"148","messageId":"149","endLine":9,"endColumn":14},{"ruleId":"146","severity":1,"message":"164","line":11,"column":12,"nodeType":"148","messageId":"149","endLine":11,"endColumn":18},{"ruleId":"151","severity":1,"message":"165","line":38,"column":7,"nodeType":"153","endLine":38,"endColumn":25,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":50,"column":7,"nodeType":"153","endLine":50,"endColumn":28,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"150","line":7,"column":12,"nodeType":"148","messageId":"149","endLine":7,"endColumn":20},{"ruleId":"146","severity":1,"message":"150","line":14,"column":12,"nodeType":"148","messageId":"149","endLine":14,"endColumn":20},{"ruleId":"146","severity":1,"message":"169","line":37,"column":25,"nodeType":"148","messageId":"149","endLine":37,"endColumn":33},{"ruleId":"146","severity":1,"message":"170","line":51,"column":25,"nodeType":"148","messageId":"149","endLine":51,"endColumn":37},{"ruleId":"146","severity":1,"message":"171","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setUserType' is assigned a value but never used.","Identifier","unusedVar","'userType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setMsg', and 'setShow'. Either include them or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'history', 'props', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["176"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","'imgSrc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'capture', 'history', 'props', 'setMsg', and 'setShow'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["177"],"React Hook React.useCallback has a missing dependency: 'exam'. Either include it or remove the dependency array.",["178"],"'userData' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'ClearSession' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [history, props.location, setMsg, setShow]",{"range":"189","text":"190"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"191","text":"192"},"Update the dependencies array to be: [history, props, props.location, setMsg, setShow]",{"range":"193","text":"194"},"Update the dependencies array to be: [capture, history, history.location, props, setMsg, setShow]",{"range":"195","text":"196"},"Update the dependencies array to be: [exam]",{"range":"197","text":"198"},[1598,1614],"[history, props.location, setMsg, setShow]",[1769,1779],"[myOption, questionIndex]",[2105,2121],"[history, props, props.location, setMsg, setShow]",[1355,1373],"[capture, history, history.location, props, setMsg, setShow]",[1659,1680],"[exam]"]