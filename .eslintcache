[{"/home/pawan/Desktop/react-template-hooks/src/index.js":"1","/home/pawan/Desktop/react-template-hooks/src/App.js":"2","/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js":"3","/home/pawan/Desktop/react-template-hooks/src/api.js":"4","/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js":"5","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js":"6","/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js":"7","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js":"8","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js":"9","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js":"10","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js":"11","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js":"12","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js":"13","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js":"14","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js":"15","/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js":"16","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"17","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js":"18","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js":"19","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js":"20","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js":"21","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js":"22","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js":"24","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js":"25","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js":"26","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js":"27","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js":"28","/home/pawan/Desktop/react-template-hooks/src/popup.js":"29","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js":"30","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js":"31","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js":"32","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js":"33","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js":"34","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js":"35","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js":"36","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js":"37","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js":"38","/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js":"39","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js":"40","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js":"41","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/GlobalController.js":"42","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/GlobalControllerForm.js":"43","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/UploadGlobalController.js":"44","/home/pawan/Desktop/react-template-hooks/src/Components/Gadmin/GadminHome.js":"45","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Lists/UserList.js":"46","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountDownButton.js":"47","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ClusterController.js":"48","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ClusterControllerForm.js":"49","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/UploadClusterController.js":"50","/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/CadminHome.js":"51","/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/AddInst.js":"52","/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/AddInstForm.js":"53","/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/UploadInst.js":"54"},{"size":199,"mtime":1610375291000,"results":"55","hashOfConfig":"56"},{"size":3915,"mtime":1613119658375,"results":"57","hashOfConfig":"56"},{"size":501,"mtime":1613543354443,"results":"58","hashOfConfig":"56"},{"size":143,"mtime":1610371769000,"results":"59","hashOfConfig":"56"},{"size":4181,"mtime":1613798582404,"results":"60","hashOfConfig":"56"},{"size":3667,"mtime":1613799568376,"results":"61","hashOfConfig":"56"},{"size":8559,"mtime":1613799303388,"results":"62","hashOfConfig":"56"},{"size":1328,"mtime":1613120102800,"results":"63","hashOfConfig":"56"},{"size":1068,"mtime":1611394431189,"results":"64","hashOfConfig":"56"},{"size":9987,"mtime":1613797489916,"results":"65","hashOfConfig":"56"},{"size":8357,"mtime":1613543587192,"results":"66","hashOfConfig":"56"},{"size":8314,"mtime":1613539108801,"results":"67","hashOfConfig":"56"},{"size":8178,"mtime":1613730497582,"results":"68","hashOfConfig":"56"},{"size":3410,"mtime":1613736079324,"results":"69","hashOfConfig":"56"},{"size":379,"mtime":1611403745246,"results":"70","hashOfConfig":"56"},{"size":4691,"mtime":1613733320777,"results":"71","hashOfConfig":"56"},{"size":2785,"mtime":1612593815083,"results":"72","hashOfConfig":"56"},{"size":2811,"mtime":1612257650542,"results":"73","hashOfConfig":"56"},{"size":9177,"mtime":1612417256712,"results":"74","hashOfConfig":"56"},{"size":2085,"mtime":1611406299706,"results":"75","hashOfConfig":"56"},{"size":1614,"mtime":1613019313683,"results":"76","hashOfConfig":"56"},{"size":3012,"mtime":1610529484000,"results":"77","hashOfConfig":"56"},{"size":4088,"mtime":1613019324654,"results":"78","hashOfConfig":"56"},{"size":2197,"mtime":1613037209602,"results":"79","hashOfConfig":"56"},{"size":7923,"mtime":1613028689238,"results":"80","hashOfConfig":"56"},{"size":454,"mtime":1611323235969,"results":"81","hashOfConfig":"56"},{"size":6616,"mtime":1613544662788,"results":"82","hashOfConfig":"56"},{"size":5088,"mtime":1613544392477,"results":"83","hashOfConfig":"56"},{"size":951,"mtime":1611738624378,"results":"84","hashOfConfig":"56"},{"size":6805,"mtime":1613544884394,"results":"85","hashOfConfig":"56"},{"size":4842,"mtime":1613545020816,"results":"86","hashOfConfig":"56"},{"size":459,"mtime":1611559269161,"results":"87","hashOfConfig":"56"},{"size":1248,"mtime":1613545940012,"results":"88","hashOfConfig":"56"},{"size":9003,"mtime":1613546021357,"results":"89","hashOfConfig":"56"},{"size":7927,"mtime":1610102374000,"results":"90","hashOfConfig":"56"},{"size":5093,"mtime":1613545525274,"results":"91","hashOfConfig":"56"},{"size":1313,"mtime":1613545261509,"results":"92","hashOfConfig":"56"},{"size":1902,"mtime":1613545185639,"results":"93","hashOfConfig":"56"},{"size":2392,"mtime":1612176576265,"results":"94","hashOfConfig":"56"},{"size":1710,"mtime":1612260609047,"results":"95","hashOfConfig":"56"},{"size":427,"mtime":1612353636668,"results":"96","hashOfConfig":"56"},{"size":990,"mtime":1613721700237,"results":"97","hashOfConfig":"56"},{"size":9048,"mtime":1613727895513,"results":"98","hashOfConfig":"56"},{"size":4377,"mtime":1613797148223,"results":"99","hashOfConfig":"56"},{"size":527,"mtime":1613646466301,"results":"100","hashOfConfig":"56"},{"size":4010,"mtime":1613802448906,"results":"101","hashOfConfig":"56"},{"size":996,"mtime":1613736409743,"results":"102","hashOfConfig":"56"},{"size":1045,"mtime":1613796055041,"results":"103","hashOfConfig":"56"},{"size":9056,"mtime":1613796852483,"results":"104","hashOfConfig":"56"},{"size":4380,"mtime":1613797127147,"results":"105","hashOfConfig":"56"},{"size":529,"mtime":1613797564320,"results":"106","hashOfConfig":"56"},{"size":955,"mtime":1613799949204,"results":"107","hashOfConfig":"56"},{"size":8919,"mtime":1613800557981,"results":"108","hashOfConfig":"56"},{"size":4327,"mtime":1613801495104,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1iupvn5",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pawan/Desktop/react-template-hooks/src/index.js",[],["229","230"],"/home/pawan/Desktop/react-template-hooks/src/App.js",[],"/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js",[],"/home/pawan/Desktop/react-template-hooks/src/api.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js",["231","232","233","234"],"/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js",["235","236","237"],"/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js",["238"],"import React, { useState, useEffect, useContext } from 'react';\nimport API from '../api';\nimport {FooterContext} from '../App';\n\nfunction Footer() \n{\n    const {footerVal, setFooterVal} = useContext(FooterContext);\n    let footerData  = useFooterData(footerVal);\n    let d           = new Date();\n    let year        = d.getFullYear();\n    \n\n    return (\n        footerData !=='' ? \n        <div className=\"container-fluid\">\n            <div className=\"d-flex align-items-center justify-content-between small\">\n                <div className=\"text-muted\">Copyright &copy; {footerData} {year}</div>\n            </div>\n        </div>\n        : null\n    );\n}\n\n\n\n\nfunction useFooterData(footerVal)\n{\n    const [footerData,setFooterData] = useState('');\n    useEffect(() => {getFooterData();},[footerVal]);\n\n    async function getFooterData()\n    {\n        await API.get('/configurations',{params :{\"type\":\"footerconfig\"}})\n        .then(function (res) \n        {\n            if(res.data.status === 'success')\n            {\n                setFooterData(res.data.footer);\n            }\n            else\n            {\n                setFooterData('GudExams');\n            }\n        })\n        .catch(function (error) \n        {\n            setFooterData('GudExams');\n        })\n    }\n\n    return footerData\n}\n\nexport default Footer;\n","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js",["239"],"import React, { useContext } from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\n\nfunction LoginButton(props)\n{\n  let history                                     =   useHistory(props);\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        setCurrentUser(undefined);\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js",["240","241"],"/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js",["242","243","244","245","246"],"import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport NextButton from \"./Exam/NextButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport EndPreviewButton from \"./Exam/EndPreviewButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\nimport {PopupContext} from '../App';\nimport WebCamCapture from './Exam/WebCamCapture';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg}                          =   useContext(ShowContext);\n  const {setPopupShow,setPopupMsg}                =   useContext(PopupContext);\n  let history                                     =   useHistory();\n  let [myOption, setMyOption]                     =   useState();\n  let [myPhotoCapture, setMyPhotoCapture]         =   useState(false);\n  let [myCameraPerm, setMyCameraPerm]             =   useState(false);\n\n  if(props.location.state)\n  {\n    //console.log(props.location.state.questions);\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => \n  {\n    if (props.location.state === undefined)\n    {\n      setShow(true);\n      setMsg('You are redirected because you have refreshed the examination page forcefully');\n        history.replace('/studenthome');\n    }\n  }, [props.location])\n\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption.trim()}\n      });\n    }\n  }, [myOption]);\n//----------------------Catching Opening of other window------------------------\n  useEffect(() =>\n  {\n    if(props.location.state && !props.location.state.preview)\n    {\n      const onBlurCallback = () => onBlur(props, setPopupShow,setPopupMsg, history);\n      window.addEventListener('blur', onBlurCallback);\n      return () =>\n      {\n        window.removeEventListener('blur', onBlurCallback);\n      };\n    }\n  }, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Restraining back button of browser--------------------\n  useEffect(() => {\n  window.history.pushState(props.location.state, '', '/startexam');\n}, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Proctoring -------------------------------------------\nuseEffect(() => {\n\n  if(props.location.state)\n  {\n    if(props.location.state.exam.paper.photo_capture)\n    {\n      setMyPhotoCapture(true);\n    }\n    else\n    {\n      setMyCameraPerm(true);\n    }\n  }\n}, [props.location]);\n//------------------------------------------------------------------------------\n\n  return (\n    props.location.state ?\n      <div className=\"row animate__animated animate__lightSpeedInLeft animate_slower\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Subject Name: {props.location.state.exam.paper.paper_name} ({props.location.state.exam.paper.paper_code}) </b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\" style={{float:\"right\"}}></i> &nbsp;&nbsp;\n                      {myCameraPerm && !props.location.state.preview && (<div style={{float:\"right\"}}><MyTimer data={props}/></div>)}\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n            {myCameraPerm && (<QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>)}\n              <hr/>\n              <div className=\"col-lg-12 row\">\n              {myCameraPerm && (<PreviousButton data={props} setMyOption={setMyOption}/>)}\n\n              {myCameraPerm && !props.location.state.preview && (<NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption} setSelectedOptions={setSelectedOptions} />)}\n\n              {myCameraPerm && props.location.state.preview && (<NextButton data={props} myOption={myOption} setMyOption={setMyOption} setSelectedOptions={setSelectedOptions} />)}\n\n              {myCameraPerm && props.location.state.preview && (<EndPreviewButton index={questionIndex} length={props.location.state.questions.length} data={props}/>)}\n\n              {myCameraPerm && !props.location.state.preview && (<EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>)}\n\n              {myCameraPerm && !props.location.state.preview && (<ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>)}\n\n                {myPhotoCapture && (<WebCamCapture exam={props.location.state.exam.id} setMyCameraPerm={setMyCameraPerm} CaptureTime={props.location.state.exam.paper.capture_interval} isProctored={props.location.state.exam.paper.proctoring}/>)}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n          {myCameraPerm && (<QuestionButtons qas={props} setSelectedOptions={setSelectedOptions} setMyOption={setMyOption}/>)}\n          {myCameraPerm && (<OverallSummery data={props}/>)}\n          </div>\n      </div> : null\n  );\n}\n\nasync function onBlur(props, setPopupShow,setPopupMsg, history)\n{\n  const exam                    = props.location.state.exam;\n  const total_allowable_alerts  = props.location.state.exam.paper.exam_switch_alerts;\n  const ExamId                  = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setPopupShow,setPopupMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        setPopupShow(true);\n        setPopupMsg('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        setPopupShow(true);\n        setPopupMsg('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    setPopupShow(true);\n    setPopupMsg('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setPopupShow,setPopupMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setPopupShow(true);\n      setPopupMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    setPopupShow(true);\n    setPopupMsg('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    if(question.stdanswer)\n    {\n      originalSelectedOptions[index] = question.stdanswer.trim();\n    }\n    else\n    {\n      originalSelectedOptions[index] = question.stdanswer;\n    }\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js",["247"],"import React, { useState , useEffect, useContext } from 'react';\nimport API from '../../api';\nimport CountCard from './CountCard';\nimport ExamCard from './ExamCard';\nimport { useLocation } from 'react-router-dom';\nimport {UserContext} from '../../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SearchBox from './SearchBox';\n\nfunction StudHome()\n{\n  const location                                  =   useLocation();\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n  let [loading, setLoading]                       =   useState(true);\n\n  const [userRequest, setUserRequest] = useState({\n    loading: true,\n    myExams: null,\n    numExams:0,\n    compExams:0,\n    yetToStartExam:0,\n    resumeExam:0,\n    expiredExam:0\n  });\n\n  //------------------------Restraining back button of browser--------------------\n  useEffect(() => \n  {\n    window.history.pushState(location.state, '', '/studenthome');\n  }, [location]);\n  //------------------------------------------------------------------------------\n\n  useEffect(() =>\n  {\n    getExamData(setUserRequest,setLoading);\n  },[]);\n\n  return (\n      !userRequest.loading && currentUser && !loading?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Student Home</h1>\n            <div className=\"breadcrumb col-lg-12 row\">\n              <div class=\"col-lg-6\">\n                <b>Student Name:</b> {currentUser.name} \n              </div>\n              <div class=\"col-lg-6\">\n                <b>Enrollment No:</b> ({currentUser.username})\n              </div>\n            </div>\n            \n            <div className=\"row col-lg-12 animate__animated animate__lightSpeedInLeft animate_slower\">\n              <CountCard count={userRequest.numExams} label={\"All\"} color={\"danger\"} onClick={() => {getExamData(setUserRequest,setLoading);}}/>\n              <CountCard count={userRequest.compExams} label={\"Completed\"} color={\"success\"} onClick={() => {getExamData(setUserRequest,setLoading,'over');}}/>\n              <CountCard count={userRequest.yetToStartExam} label={\"Yet To Start\"} color={\"warning\"} onClick={() => {getExamData(setUserRequest,setLoading,'yettostart');}}/>\n              <CountCard count={userRequest.resumeExam} label={\"Resume\"} color={\"primary\"} onClick={() => {getExamData(setUserRequest,setLoading,'inprogress');}}/>\n              <CountCard count={userRequest.expiredExam} label={\"Expired\"} color={\"info\"} onClick={() => {getExamData(setUserRequest,setLoading,'expired');}}/>\n              <SearchBox getExamData={getExamData} setUserRequest={setUserRequest} setLoading={setLoading}/>\n            </div>\n            <br/><br/>\n            <div className=\"row col-lg-12 animate__animated animate__lightSpeedInLeft animate_slower\">\n            {\n              userRequest.numExams ?\n              userRequest.myExams ? userRequest.myExams.data.map((exam) =>\n              (\n                  <ExamCard exam={exam} key={exam.id}/>\n              )) : null\n              : null\n            }\n            </div><br/>\n        </div>\n      </div> : \n      <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n        <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n      </div>\n  );\n}\n\n\nasync function getExamData(setUserRequest,setLoading,filter1='All')\n{\n        setLoading(true);\n        const res = await API.get('/exam');\n        let exams = await res.data;\n        //-------------------Sort data according to exam date for cards---------\n        let unsortedData= exams.data;\n        let sorted = {};\n        sorted = unsortedData.sort(function(a,b)\n        {\n          return a.paper.from_date - b.paper.from_date;\n        });\n        //----------------------------------------------------------------------\n        let i               = 0;\n        let compleated      = 0;\n        let yetToStart      = 0;\n        let resume          = 0;\n        let expired         = 0;\n        let numExams        = exams.data.length;\n        let EndTime         = '';\n        let Now             = '';\n        let overIndex          = [];\n        let inprogressIndex    = [];\n        let yetToStartIndex    = [];\n        let expiredIndex       = [];\n\n        Object.keys(sorted).forEach(function(key)\n        {\n          EndTime           = sorted[key].paper.to_date;\n          Now               = sorted[key].now;\n\n          if(sorted[key].examstatus === 'over')\n          {\n            compleated = compleated+1;\n            overIndex.push(key);\n          }\n          else if(sorted[key].examstatus === '')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              yetToStart = yetToStart+1;\n              yetToStartIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'inprogress')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              resume = resume+1;\n              inprogressIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'expired')\n          {\n            expired = expired+1;\n            expiredIndex.push(key);\n          }\n        });\n\n        //---------------------------Filtering array based on examStatus-------\n        if(filter1 === 'over')\n        {\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n        }\n        else if(filter1 === 'inprogress')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n        }\n        else if(filter1 === 'expired')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        else if(filter1 === 'yettostart')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        else if(filter1==='All')\n        {\n\n        }\n        else\n        {\n          let searched = [];\n          //-------------------------Search Paper Name-------------------------------------\n            for(let i=0;i<sorted.length;i++)\n            {\n              let paper_name = sorted[i].paper.paper_name.toLowerCase();\n              let myFilter = filter1.toLowerCase();\n\n              if(paper_name.includes(myFilter))\n              {\n                searched.push(sorted[i]);\n              }\n            }\n            exams.data = searched;\n          //-------------------------------------------------------------------------------\n        }\n        //---------------------------------------------------------------------\n        if(exams.data)\n        {\n          setUserRequest({ loading:false, myExams:exams, numExams:numExams,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n        }\n        else\n        {\n          setUserRequest({ loading:false, myExams:exams, numExams:0,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n        }\n        setLoading(false);\n}\n\nexport default StudHome;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js",["248","249","250"],"import React ,{ useState, useEffect, useContext }  from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport API from '../../api';\nimport WebCamCapture from '../Exam/WebCamCapture';\nimport {UserContext} from '../../App';\n\nfunction useOptions()\n{\n  let history                           =   useHistory();\n  let location                          =   useLocation();\n  let [exam, setExam]                   =   useState();\n  let myExam                            =   undefined;\n  \n\n  if(location.state && location.state.exam)\n  {\n    myExam = location.state.exam;\n    //console.log(myExam);\n  }\n  useEffect(() =>\n  {\n    if (myExam)\n    {\n      setExam(myExam);\n    }\n    else\n    {\n      if(location.state && location.state.role === 'STUDENT')\n      {\n        history.replace(\"/studenthome\");\n      }\n      else\n      {\n        history.replace(\"/adminexamreport\");\n      }\n    }\n  }, [myExam,history]);\n\n  return exam;\n}\n\nfunction Instructions(props)\n{\n  const [checked, setChecked]         =   useState(false);\n  const [startexam, setStartexam]     =   useState(true);\n  let history                         =   useHistory();\n  let exam                            =   useOptions();\n  let location                        =   useLocation();\n  let [myCameraPerm, setMyCameraPerm] =   useState(false);\n  const {currentUser, setCurrentUser} =   useContext(UserContext);\n\n  let button = '';\n  let BtnLabel = '';\n  let  negativeMarks='';\n  if(exam)\n  {\n        if(exam.examstatus==='inprogress')\n        {\n          BtnLabel = 'Continue Exam';\n        }\n        else\n        {\n          BtnLabel = 'Start Exam';\n        }\n\n        if(location.state.role === 'ADMIN')\n        {\n          BtnLabel = 'Preview Exam';\n        }\n\n        exam.paper.negative_marks===0 ?negativeMarks = 'No' : negativeMarks = 'Yes';\n  }\n\n  return (\n      exam ?\n      <div className=\"animate__animated animate__flash animate_slower\">\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Exam Instructions</h1>\n            <div className=\"breadcrumb col-lg-12 row\">\n                <div className=\"breadcrumb-item active col-lg-10\">Read Instructions Carefully...</div>\n                <div className=\"col-lg-2\">{currentUser && currentUser.role==='STUDENT' ? <Link to=\"studenthome\" className=\"btn btn-danger btn-sm\">Go Back</Link>: <Link to=\"adminexamreport\" className=\"btn btn-danger btn-sm\">Go Back</Link>}</div>\n            </div>\n            <div className=\"col-lg-12\">\n                  <div className='card'>\n                      <div className=\"card-header bg-primary\" style={{color:\"white\"}}>\n                        <h5><b>{exam.paper.paper_name}({exam.paper.paper_code}) Instructions</b></h5>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"col-lg-8\">\n                          <ul>\n                            <li> Welcome to Online Exam for {exam.paper.paper_name}</li>\n                            <li> Exam has total {exam.paper.questions} Questions</li>\n                            <li> Total time for Exam is {exam.paper.duration} Mins</li>\n                            <li> Negative Marking Exam: <b>{negativeMarks}</b></li>\n                            <li> Close all other windows/apps</li>\n                            <li> Do not close browser/app before logging out</li>\n                          </ul>\n\n                          <h1><i>Best of Luck for your Exam</i></h1>\n                        </div>\n                        <div className=\"col-lg-4\">\n                          <WebCamCapture exam={location.state.exam.id} setMyCameraPerm={setMyCameraPerm} show={'no'} CaptureTime={location.state.exam.paper.capture_interval} isProctored={location.state.exam.paper.proctoring}/>\n                        </div>\n                      </div>\n                      <div className=\"card-footer\">\n                        <center>\n                            <input type=\"checkbox\" id=\"read\" name=\"read\" defaultChecked={checked} onChange={() => setChecked(!checked)}/> &nbsp;&nbsp;I have read and understood instructions.<br/><br/>\n                            {BtnLabel!=='Preview Exam' ?\n                            <button disabled={(!checked || !myCameraPerm)} onClick={() => ExamStart(history,exam,setStartexam,location)} \n                            className=\"btn btn-success\">{BtnLabel}</button>\n                            :\n                            <button disabled={(!checked || !myCameraPerm)} onClick={() => {ExamPreview(history,exam,setStartexam,location);}} className=\"btn btn-success\">{BtnLabel}</button>\n                            }\n                        </center>\n                      </div>\n                  </div>\n            </div>\n            <br/>\n            <div>{!startexam && (\n                <div className=\"alert alert-info\">Problem Starting Examination</div>\n            )}</div>\n        </div>\n      </div> : ''\n    );\n}\n\nfunction checkCameraPermissions(setStartexam)\n{\n  setStartexam(true);\n}\n\nasync function ExamPreview(history,exam,setStartexam,location)\n{\n  let examDetails = {}\n  //------------------Start Exam------------------------------------------------\n  if(location.state.role !== 'STUDENT')\n  {\n        const myQuestions = await getPreviewQuestions(exam);\n        if(myQuestions)\n        {\n          examDetails = {\n          preview                             : true,\n          exam                                : exam,\n          questions                           : myQuestions,\n          currentQuestionIndex                : 0,\n          solvedQuestionIndexes               : [], \n          unsolvedQuestionIndexes             : [],\n          markedSolvedIndexes                 : [],\n          markedUnsolvedIndexes               : [],\n        }\n        setStartexam(true);\n        history.replace(\"/startexam\", examDetails) ;\n      }\n  }\n  else\n  {\n    setStartexam(false);\n  }\n}\n\n\nasync function ExamStart(history,exam,setStartexam,location)\n{\n  let examDetails = {}\n  //------------------Start Exam------------------------------------------------\n  if(location.state.role === 'STUDENT')\n  {\n    if(await startMyExam(exam))\n    {\n        const myQuestions = await getQuestions(exam);\n        if(myQuestions)\n        {\n          //console.log(myQuestions);\n          examDetails = {\n          preview                             :   false,\n          exam                                :   exam,\n          questions                           :   myQuestions,\n          currentQuestionIndex                :   0,\n          solvedQuestionIndexes               :   getIndexes(myQuestions,'answered'), unsolvedQuestionIndexes             :   getIndexes(myQuestions,'unanswered'),\n          markedSolvedIndexes                 :   getIndexes(myQuestions,'answeredandreview'),\n          markedUnsolvedIndexes               :   getIndexes(myQuestions,'unansweredandreview'),\n        }\n        setStartexam(true);\n        history.replace(\"/startexam\", examDetails) ;\n      }\n    }\n    else\n    {\n      setStartexam(false);\n    }\n  }\n  //----------------------------------------------------------------------------\n}\n\nasync function startMyExam(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"start\"});\n\n  if(res.data.status === 'success')\n  {\n    return 1;\n  }\n  else\n  {\n    return 0;\n  }\n}\n\n\nasync function getQuestions(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.get('/answer',{params: {\"exam_id\": ExamId}});\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nasync function getPreviewQuestions(exam)\n{\n  const PaperId = exam.paper.id;\n\n  const res = await API.get('/questions/'+PaperId,{params: {\"type\" : \"preview\"}});\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nfunction getIndexes(myQuestions,searchString)\n{\n  let arr     = [];\n\n  myQuestions.forEach(function(question,index){\n    if(question.answered === searchString)\n    {\n      arr.push(index);\n    }\n  });\n  return arr;\n}\n\nexport default Instructions;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js",["251","252","253","254","255","256","257","258","259","260","261"],"import React, { useState,useEffect, useContext } from 'react';\nimport Webcam from \"react-webcam\";\nimport { useHistory } from 'react-router-dom';\nimport {PopupContext} from '../../App';\nimport API from '../../api';\nimport {UserContext} from '../../App';\n\n\nconst WebCamCapture = (props) => {\n    const {currentUser, setCurrentUser}     = useContext(UserContext);\n    let CaptureTime                         = parseInt(props.CaptureTime) * 1000;\n    const webcamRef                         = React.useRef(null);\n    const [imgSrc, setimgSrc]               = useState(null);\n    const videoConstraints                  = {facingMode: \"user\"};\n    let history                             = useHistory();\n    const {setPopupShow,setPopupMsg}        = useContext(PopupContext);\n    const exam                              = props.exam;\n    const CapTime                           = props;\n    \n    const capture                = React.useCallback(\n    () => \n        { \n          if(webcamRef)\n          {\n              const imageSrc            = webcamRef.current.getScreenshot();\n              setimgSrc(imageSrc); \n\n              //-----------------Specifically for getting value instead of Promise-----\n              (async () => \n              {\n                let res = await storeSnap(exam,imageSrc);\n                let snapid = res.data.snapid;\n                if(snapid && props.isProctored)\n                {\n                  ProcessImage(imageSrc,exam,snapid,setPopupShow,setPopupMsg);\n                }\n              })();\n              //-----------------------------------------------------------------------\n          }\n        },\n        [webcamRef,setimgSrc,exam]\n    );\n\n    useEffect(() => {    \n        navigator.mediaDevices.getUserMedia({ video: true, voice: true })\n        .then(function(stream) \n        {\n            props.setMyCameraPerm(true);\n        })\n        .catch(function(err) \n        {\n            props.setMyCameraPerm(false);\n            setPopupShow(true);\n            setPopupMsg('Without Camera Premission Examination can not be started.');\n            if(currentUser && currentUser.role === 'STUDENT')\n            {\n                history.replace('/studenthome');\n            }\n            else if(currentUser && currentUser.role === 'ADMIN')\n            {\n                history.replace('/adminexamreport');\n            }\n        });\n        let myCapture = setInterval(capture, CaptureTime);\n\n        //------------------Cleanup-----------------------------------------\n        return () => {\n            clearInterval(myCapture);\n        }\n        //------------------------------------------------------------------\n    },[history.location,capture,history,props,setPopupMsg,setPopupShow]);   \n\n    let webCamStyle = '';\n\n    if(props.show==='no')\n    {\n        webCamStyle = {display:'none'};\n    }\n    else\n    {\n        webCamStyle = {display:'block'};\n    }\n  \n    return (\n        <div className=\"col-lg-12\" style={{margin:\"20px\"}} style={webCamStyle}>\n            <center>\n                <Webcam\n                audio={false}\n                height={400}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={300}\n                videoConstraints={videoConstraints}\n                screenshotQuality={\"1\"}\n                />\n            </center>\n        </div>\n    );\n  };    \n\n  async function storeSnap(exam,image)\n  {\n    return await API.post('/proctor/',{\"type\": \"snapshot\",\"exam\":exam,\"image\":image});\n  }\n\n\n  function ProcessImage(file,exam,snapid,setPopupShow,setPopupMsg) \n  {\n        AnonLog();\n        var image = null;\n        \n        var jpg = true;\n        try\n        {\n            image = atob(file.split(\"data:image/jpeg;base64,\")[1]);\n        }\n        catch (e)\n        {\n          jpg = false;\n        }\n        if (jpg == false)\n        {\n          try\n          {\n            image = atob(file.split(\"data:image/png;base64,\")[1]);\n          }\n          catch (e)\n          {\n            console.log(\"Not an image file Rekognition can process\");\n            return;\n          }\n        }\n        //unencode image bytes for Rekognition DetectFaces API\n        var length = image.length;\n        var imageBytes = new ArrayBuffer(length);\n        var ua = new Uint8Array(imageBytes);\n        for (var i = 0; i < length; i++)\n        {\n          ua[i] = image.charCodeAt(i);\n        }\n        //Call Rekognition\n        DetectFaces(imageBytes,exam,snapid,setPopupShow,setPopupMsg);\n  }\n  //----------------------------------------------------------------------------\n\n  //--------------------Provides anonymous log on to AWS services---------------\n  function AnonLog()\n  {\n    // Configure the credentials provider to use your identity pool\n    window.AWS.config.region = 'ap-south-1'; // Region\n    window.AWS.config.credentials = new window.AWS.CognitoIdentityCredentials(\n    {\n        IdentityPoolId: 'ap-south-1:948e3fb3-7805-4620-8c28-aafcfdebfbd5',\n    });\n    // Make the call to obtain credentials\n    window.AWS.config.credentials.get(function ()\n    {\n      // Credentials will be available when this function is called.\n      var accessKeyId = window.AWS.config.credentials.accessKeyId;\n      var secretAccessKey = window.AWS.config.credentials.secretAccessKey;\n      var sessionToken = window.AWS.config.credentials.sessionToken;\n    });\n  }\n  //----------------------------------------------------------------------------\n\n  //------------------Face Detection Logic--------------------------------------\n\n  function DetectFaces(imageData,exam,snapid,setPopupShow,setPopupMsg)\n  {\n    window.AWS.region = \"ap-south-1\";\n    var rekognition = new window.AWS.Rekognition();\n    var params = {\n      Image: {\n        Bytes: imageData\n      },\n      Attributes: [\n        'ALL',\n      ]\n    };\n\n    rekognition.detectFaces(params, function (err, data)\n    {\n      if (err) console.log(err, err.stack); // an error occurred\n      else\n      {\n        if(data.FaceDetails.length > 0)\n        {\n          data.FaceDetails.map( async (element) => \n          {\n            const agerange        = element.AgeRange.Low+'-'+element.AgeRange.High;\n            const beard           = element.Beard.Value;\n            const eyeglasses      = element.Eyeglasses.Value;\n            const eyesopen        = element.EyesOpen.Value;\n            const gender          = element.Gender.Value;\n            const mustache        = element.Mustache.Value;\n            const smile           = element.Smile.Value;\n            const sunglasses      = element.Sunglasses.Value;\n            const examid          = exam;\n\n            let res = await API.post('/proctorDetails/',{\"examid\":examid,\"snapid\":snapid,\"agerange\":agerange,\"beard\":beard,\"eyeglasses\":eyeglasses,\"eyesopen\":eyesopen,\"gender\":gender,\"mustache\":mustache,\"smile\":smile,\"sunglasses\":sunglasses});\n\n            console.log(res);\n          });\n\n          if(data.FaceDetails.length > 1)\n          {\n            //----------------------message for more than one person detection-------------\n            setPopupShow(true);\n            setPopupMsg('There are more than one persons sitting with you while taking examination. This  event will be recorded...');\n            //-----------------------------------------------------------------------------\n          }\n        }\n        else\n        {\n          //----------------------message for no person detection--------------------------\n          setPopupShow(true);\n          setPopupMsg('Either no person is taking examination or Camera of your device is not working or it might be intentionally blocked while taking examination. This event will be recorded...');\n          //-------------------------------------------------------------------------------\n        }\n      }\n    });\n  }\n\n  //----------------------------------------------------------------------------\n\n  export default WebCamCapture;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js",[],"/home/pawan/Desktop/react-template-hooks/src/popup.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js",["262"],"import React, { useState, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../../../api';\nimport {LogoContext} from '../../../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction ConfigureHeader(props) \n{\n    const [headerData ,setHeaderData]   =   useState(false);\n    const [msg ,setMsg]                 =   useState('');\n    let [loading, setLoading]           =   useState(false);\n    const {logoVal, setLogoVal}         =   useContext(LogoContext);\n\n    return(\n        <>\n            <Formik\n            initialValues={{ orgName: \"\",file:\"\"}}\n            onSubmit={async (values,actions) =>\n            {\n                await configHeader(values.orgName,values.file,setHeaderData,setMsg,setLoading,setLogoVal);\n                actions.setSubmitting(false);\n                actions.resetForm({\n                        values: {\n                        orgName: '',\n                        file: ''\n                        },\n                });\n            }}\n            validationSchema={Yup.object().shape({\n                orgName:Yup.string()\n                .required(\"Organization Name is Required for Configuring Header Text.\"),\n                file:Yup.string()\n                .required(\"Uploading Organization Logo is Mandatory.\")\n            })}\n            >\n            {\n                props => \n                {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleChange,\n                        isSubmitting,\n                        handleBlur,\n                        handleSubmit,\n                        setFieldValue\n                    } = props;\n\n                    return (\n                        <div>\n                            <div className=\"container-fluid\">\n                                <h1 className=\"mt-4\">Configure Header</h1>\n                                <ol className=\"breadcrumb mb-4\">\n                                    <li className=\"breadcrumb-item active\">Configure Header</li>\n                                </ol>\n                                <div className=\"col-lg-12 animate__animated animate__lightSpeedInLeft animate_slower\">\n                                    \n                                    <Form className=\"col-lg-12 row\" onSubmit={handleSubmit}>\n                                        <Form.Group className=\"col-lg-6 row\">\n                                            <Form.Control \n                                                type=\"text\" \n                                                id=\"orgName\" \n                                                placeholder=\"Enter Organization Name\" \n                                                className=\"col-lg-12\"\n                                                value ={values.orgName}\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                            />\n                                            {errors.orgName && touched.orgName && (\n                                                <div className=\"alert alert-info col-lg-12\">{errors.orgName}</div>\n                                            )}\n                                        </Form.Group>\n                                        <div className=\"col-lg-1\"></div>\n                                        \n                                        <Form.Group className=\"col-lg-5 row\">\n                                            <center>\n                                            <input \n                                                id=\"file\" \n                                                name=\"file\" \n                                                type=\"file\" \n                                                onChange={(event) => {\n                                                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                                                }} \n                                                onBlur={handleBlur}\n                                                className=\"form-control\" \n                                            />\n                                            {errors.file && touched.file && (\n                                                <div className=\"alert alert-info col-lg-12\">{errors.file}</div>\n                                            )}\n                                            </center>\n                                        </Form.Group>\n                                        \n                                        <div className=\"col-lg-12\">\n                                            <center><Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button></center>\n                                        </div>\n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }\n            }\n            </Formik>\n            <div className=\"col-lg-12\" style={{marginTop:\"20px\"}}>\n                {headerData && !loading ? \n                    <div className=\"alert alert-danger animate__animated animate__tada animate_slower\" role=\"alert\">\n                        {msg}\n                    </div>\n                : \n                    <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"40%\"}}>\n                        <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n                    </div>\n                }\n            </div>\n        </>\n    );\n}\n\nasync function configHeader(orgName,file,setHeaderData,setMsg,setLoading,setLogoVal)\n{\n    setLoading(true);\n    let fd = new FormData();\n    fd.append(\"type\", 'headerconfig');\n    fd.append(\"orgName\", orgName);\n    fd.append(\"file\", file);\n\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n\n    await API.post('/configurations',fd,config)\n    .then(function (res) \n    {\n        if(res.data.status === 'success')\n        {\n            setHeaderData(true);\n            setMsg(res.data.message);\n            setLogoVal(Math.random());\n            setTimeout(() => {\n                setHeaderData(false);\n            }, 10000);\n        }\n        else\n        {\n            setMsg(res.data.message);\n            setHeaderData(true);\n        }\n        setLoading(false);\n    })\n    .catch(function (error) \n    {\n        setHeaderData(true);\n        setLoading(false);\n        setMsg(error.response.data.message);\n    });\n}\n\nexport default ConfigureHeader;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js",["263"],"import React, { useState, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../../../api';\nimport {FooterContext} from '../../../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction ConfigureFooter(props) \n{\n    const [footerData ,setFooterData]   =   useState(false);\n    const [msg ,setMsg]                 =   useState('');\n    let [loading, setLoading]           =   useState(false);\n    const {footerVal, setFooterVal}     = useContext(FooterContext);\n    \n    return(\n        <>\n            <Formik\n            initialValues={{ orgName: \"\"}}\n            onSubmit={async (values,actions) =>\n            {\n                await updateFooterData(values.orgName,setFooterData,setMsg,setLoading,setFooterVal);\n                actions.setSubmitting(false);\n                actions.resetForm({\n                        values: {\n                        orgName: ''\n                        },\n                });\n            }}\n            validationSchema={Yup.object().shape({\n                orgName:Yup.string()\n                .required(\"Organization Name is Required for Configuring Footer Text.\")\n            })}\n            >\n            {\n                props => \n                {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        isSubmitting,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    } = props;\n\n                    return (\n                        <div>\n                            <div className=\"container-fluid\">\n                                <h1 className=\"mt-4\">Configure Footer</h1>\n                                <ol className=\"breadcrumb mb-4\">\n                                    <li className=\"breadcrumb-item active\">Configure Footer</li>\n                                </ol>\n                                <div className=\"col-lg-12 animate__animated animate__lightSpeedInLeft animate_slower\">\n                                    <Form className=\"col-lg-12 row\" onSubmit={handleSubmit}>\n                                        <Form.Group className=\"col-lg-10 row\">\n                                            <Form.Control \n                                                type=\"text\" \n                                                id=\"orgName\" \n                                                placeholder=\"Enter Organization Name\" \n                                                className=\"col-lg-12\"\n                                                value ={values.orgName}\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                            />\n                                            {errors.orgName && touched.orgName && (\n                                                <div className=\"alert alert-info col-lg-12\">{errors.orgName}</div>\n                                            )}\n                                        </Form.Group>\n                                        <div className=\"col-lg-2\">\n                                            <center><Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>Submit</Button></center>\n                                        </div>\n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                }\n            }\n            </Formik>\n            <div className=\"col-lg-12\" style={{marginTop:\"20px\"}}>\n                {footerData && !loading ? \n                <div className=\"alert alert-danger animate__animated animate__tada animate_slower\" role=\"alert\">\n                    {msg}\n                </div>\n                : \n                <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"40%\"}}>\n                    <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n                </div>\n                }\n            </div>\n        </>\n    );\n}\n\nasync function updateFooterData(orgName,setFooterData,setMsg,setLoading,setFooterVal)\n{\n    setLoading(true);\n    const res = await API.put('/configurations',{\"orgName\" : orgName,\"type\":\"footerconfig\"});\n    if(res.data.status === 'success')\n    {\n        setFooterData(true);\n        setFooterVal(Math.random());\n        setTimeout(() => {\n            setFooterData(false);\n        }, 10000);\n    }\n    else\n    {\n        setFooterData(false);\n        setFooterVal(Math.random());\n    }\n    setLoading(false);\n    setMsg(res.data.message);\n}\n\nexport default ConfigureFooter;","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js",["264","265","266"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport API from '../../../api';\nimport Axios from 'axios';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Moment from 'react-moment';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {ShowContext} from '../../../App';\n\n\nfunction InstExamReport(props)\n{\n    const {setShow,setMsg}                          =   useContext(ShowContext);\n    const [allPapers, setAllPapers]                 =   useState([]);\n    const [allExams, setAllExams]                   =   useState([]);\n    let [loading, setLoading]                       =   useState(true);\n    const header                                    =   getHeader(allExams);\n    const data                                      =   getData(allPapers,allExams,props);\n    const options = {\n        sizePerPageList: [\n            {\n                text: '5', value: 5\n            }, \n            {\n                text: '10', value: 10\n            }, \n            {\n                text: '50', value: 50\n            },\n            {\n                text: '500', value: 500\n            }, \n            {\n                text: '1000', value: 1000\n            }, \n            {\n                text: '10000', value: 10000\n            }\n        ]\n    };\n   \n    useEffect(() => \n    {\n        getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props);\n    },[props.instId,setMsg,setShow]);\n\n    return (\n    allPapers.length > 0 && !loading ?\n      <div>\n        <div className=\"container-fluid\">\n            {(props.role==='' || props.role===undefined) &&(<h1 className=\"mt-4\">Institute Examination Report</h1>)}\n            {(props.role==='' || props.role===undefined) &&(<ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Institute Examination Report</li>\n            </ol>)}<br/>\n            <div className=\"row col-lg-12 animate__animated animate__fadeInDown animate_slower\" style={{overflow:\"auto\"}}>\n                \n                <BootstrapTable keyField='srno' data={ data } columns={ header } filter={ filterFactory() } pagination={ paginationFactory(options) }/>\n            </div>\n        </div>\n      </div>\n      : <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n            <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n        </div>\n    );\n}\n\nfunction getHeader(allExams)\n{\n    let myHeader = [\n        { text: 'Sr No', dataField: 'srno'},\n        { text: 'Date & Start Time', dataField: 'datenstarttime',filter: textFilter()},\n        { text: 'Code', dataField: 'code',filter: textFilter()},\n        { text: 'Subject Name', dataField: 'subjectname',filter: textFilter()},\n        { text: 'Marks', dataField: 'marks'},\n        { text: 'Total Q\\'s', dataField: 'totquestions'},\n        { text: 'Duration', dataField: 'duration'},\n        { text: 'Total Students', dataField: 'totstud'},\n        { text: 'Total End', dataField: 'totend'},\n        { text: 'Total Inprogress', dataField: 'totinprogress'},\n        { text: 'Total Not Attend', dataField: 'totnotattend'},\n    ];\n    return myHeader;\n}\n\nfunction getData(allPapers,allExams,props)\n{\n    let myData = [];\n    let i = 1;\n\n    allPapers.map((data, index) => {\n        //console.log('index:'+index+' Data:'+allExams[index]);\n        let paper_name = (props.role==='ADMIN') ?  <Link to={{pathname: '/instructions',state: {exam:allExams[index],role:'ADMIN'}}}>{data.paper_name}</Link> :  data.paper_name ;\n\n        myData.push({\n            srno                    : i++,\n            datenstarttime          : <Moment format=\"YYYY-MM-DD H:mm:ss\">{data.from_date}</Moment>,\n            code                    : data.paper_code,\n            subjectname             : paper_name,\n            marks                   : data.marks,\n            totquestions            : data.questions,\n            duration                : data.durations,\n            totstud                 : getCount(allExams,'total',data.id),\n            totend                  : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'over',paper_code:data.paper_code}}}> {getCount(allExams,'end',data.id)}</Link>,\n            totinprogress           : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'inprogress',paper_code:data.paper_code}}}> {getCount(allExams,'inprogress',data.id)}  </Link>,\n            totnotattend            : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'notattend',paper_code:data.paper_code}}}>{getCount(allExams,'notattend',data.id)} </Link>\n        })   \n    })\n\n    return myData;\n}\n\nasync function getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props)\n{\n    let allPapers = [];\n    let allExams  = [];\n    let res       = [];\n    if(props.role==='ADMIN')\n    {\n        if(props.instId === '')\n        {\n            setMsg('Please Select Institute to get its report...');\n            setShow(true);\n            setAllPapers([]);\n            setAllExams([]);\n        }\n        //console.log(props.instId);\n        res = await API.get('/program/'+props.instId);\n    }\n    else\n    {\n        res = await API.get('/program');\n    }\n        if(res.data.status==='success')\n        {\n            if(res.data.data.length > 0)\n            {\n                //console.log(res.data.data.length);\n                for(let i=0;i<res.data.data.length;i++)\n                {\n                    await Axios.all([\n                            API.get('/paper',{ params: {\"program_id\":res.data.data[i].id}}),\n                            API.get('/exam/'+res.data.data[i].id,{ params: {\"type\":\"byprogramid\"}})\n                    ])\n                    .then(responseArr => \n                    {\n                        if(responseArr[0].data.status==='success')\n                        {\n                            if(responseArr[0].data.data.length > 0)\n                            {\n                                allPapers.push(...responseArr[0].data.data);\n                            }\n                        }   \n                        \n                        if(responseArr[1].data.status==='success')\n                        {\n                            if(responseArr[1].data.data.length > 0)\n                            {\n                                allExams.push(...responseArr[1].data.data);\n                            }\n                        }\n                    });\n                }\n                allPapers = [...allPapers];\n                allPapers = [...new Set(allPapers)];\n\n                allPapers.sort(function(a,b)\n                {\n                    return a.from_date - b.from_date;\n                });\n                \n                if(allPapers.length > 0 && allExams.length > 0)\n                {\n                    setAllPapers(allPapers);\n                    setAllExams(allExams);\n                    setLoading(false);\n                } \n            }\n            else\n            {\n                setAllPapers([]);\n                setAllExams([]);\n                setShow(true);\n                setMsg('No Program Data found for this Institute.Please Add data or Configure it Properly...');\n                setLoading(false);\n            }\n        }\n        else\n        {\n            setAllPapers([]);\n            setAllExams([]);\n            setShow(true);\n            setMsg('Problem fetching data from Server...');\n            setLoading(false);\n        }\n}\n\nfunction getCount(allExams,str,paper_id)\n{\n    let total=0;\n    let end=0;\n    let inprogress=0;\n    let absent=0;\n\n    if(str === 'total')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id))\n            {\n                total++;\n            }\n        }\n        return total;\n    }\n    else if(str === 'end')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'over')\n            {\n                end++;\n            }\n        }\n        return end;\n    }\n    else if(str === 'inprogress')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'inprogress')\n            {\n                inprogress++;\n            }\n        }\n        return inprogress;\n    }\n    else if(str === 'notattend')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === '')\n            {\n                absent++;\n            }\n        }\n        return absent;\n    }\n}\n\nexport default InstExamReport;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js",["267"],"import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction SearchBox(props)\n{\n    return (\n    <>  \n        <Formik\n            initialValues={{ searchSubject:\"\"}}\n            onSubmit={(values,{ setSubmitting }) =>\n            {\n                props.getExamData(props.setUserRequest,props.setLoading,values.searchSubject);\n            }}\n            validationSchema={Yup.object().shape({\n                searchSubject:Yup.string()\n                .required(\"Subject Name is Required...\")\n            })}\n            >\n            {\n                props => \n                {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    } = props;\n\n                    return (\n                        <div className=\"col-lg-2\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"input-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        type=\"text\" \n                                        name=\"searchSubject\" \n                                        id=\"searchSubject\" \n                                        placeholder=\"Subjects...\"\n                                        value ={values.searchSubject}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                    />\n                                    <div className=\"input-group-append\">\n                                    <button type=\"button\" className=\"btn btn-primary\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                                    </div>\n                                    {errors.searchSubject && touched.searchSubject && (\n                                        <div className=\"alert alert-info col-lg-12\">{errors.searchSubject}</div>\n                                    )}\n                                </div>\n                            </form>\n                        </div>\n                    );\n                }\n            }\n        </Formik>\n    </>\n    );\n}\n\nexport default SearchBox;","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/GlobalController.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/GlobalControllerForm.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/UploadGlobalController.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Gadmin/GadminHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Lists/UserList.js",["268"],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountDownButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ClusterController.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ClusterControllerForm.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/UploadClusterController.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/CadminHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/AddInst.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/AddInstForm.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Cadmin/UploadInst.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":11,"column":21,"nodeType":"275","messageId":"276","endLine":11,"endColumn":31},{"ruleId":"273","severity":1,"message":"277","line":18,"column":10,"nodeType":"275","messageId":"276","endLine":18,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":66,"column":17,"nodeType":"280","endLine":66,"endColumn":60},{"ruleId":"281","severity":1,"message":"282","line":101,"column":7,"nodeType":"283","endLine":101,"endColumn":16,"suggestions":"284"},{"ruleId":"273","severity":1,"message":"285","line":7,"column":25,"nodeType":"275","messageId":"276","endLine":7,"endColumn":39},{"ruleId":"278","severity":1,"message":"279","line":41,"column":25,"nodeType":"280","endLine":41,"endColumn":174},{"ruleId":"278","severity":1,"message":"279","line":128,"column":29,"nodeType":"280","endLine":128,"endColumn":178},{"ruleId":"273","severity":1,"message":"286","line":7,"column":23,"nodeType":"275","messageId":"276","endLine":7,"endColumn":35},{"ruleId":"273","severity":1,"message":"287","line":9,"column":10,"nodeType":"275","messageId":"276","endLine":9,"endColumn":21},{"ruleId":"273","severity":1,"message":"287","line":16,"column":10,"nodeType":"275","messageId":"276","endLine":16,"endColumn":21},{"ruleId":"281","severity":1,"message":"288","line":205,"column":38,"nodeType":"283","endLine":205,"endColumn":40,"suggestions":"289"},{"ruleId":"281","severity":1,"message":"290","line":45,"column":6,"nodeType":"283","endLine":45,"endColumn":22,"suggestions":"291"},{"ruleId":"281","severity":1,"message":"292","line":55,"column":6,"nodeType":"283","endLine":55,"endColumn":16,"suggestions":"293"},{"ruleId":"281","severity":1,"message":"294","line":68,"column":6,"nodeType":"283","endLine":68,"endColumn":22,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":195,"column":34,"nodeType":"298","messageId":"299","endLine":195,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":212,"column":34,"nodeType":"298","messageId":"299","endLine":212,"endColumn":36},{"ruleId":"273","severity":1,"message":"285","line":13,"column":23,"nodeType":"275","messageId":"276","endLine":13,"endColumn":37},{"ruleId":"281","severity":1,"message":"300","line":38,"column":6,"nodeType":"283","endLine":38,"endColumn":22,"suggestions":"301"},{"ruleId":"273","severity":1,"message":"285","line":51,"column":23,"nodeType":"275","messageId":"276","endLine":51,"endColumn":37},{"ruleId":"273","severity":1,"message":"302","line":128,"column":10,"nodeType":"275","messageId":"276","endLine":128,"endColumn":32},{"ruleId":"273","severity":1,"message":"285","line":10,"column":25,"nodeType":"275","messageId":"276","endLine":10,"endColumn":39},{"ruleId":"273","severity":1,"message":"303","line":13,"column":12,"nodeType":"275","messageId":"276","endLine":13,"endColumn":18},{"ruleId":"273","severity":1,"message":"304","line":18,"column":11,"nodeType":"275","messageId":"276","endLine":18,"endColumn":18},{"ruleId":"281","severity":1,"message":"305","line":41,"column":9,"nodeType":"283","endLine":41,"endColumn":35,"suggestions":"306"},{"ruleId":"281","severity":1,"message":"307","line":71,"column":7,"nodeType":"283","endLine":71,"endColumn":72,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":85,"column":60,"nodeType":"311","endLine":85,"endColumn":79},{"ruleId":"312","severity":1,"message":"313","line":85,"column":67,"nodeType":"275","endLine":85,"endColumn":78},{"ruleId":"314","severity":1,"message":"315","line":121,"column":17,"nodeType":"316","messageId":"317","endLine":121,"endColumn":19},{"ruleId":"273","severity":1,"message":"318","line":159,"column":11,"nodeType":"275","messageId":"276","endLine":159,"endColumn":22},{"ruleId":"273","severity":1,"message":"319","line":160,"column":11,"nodeType":"275","messageId":"276","endLine":160,"endColumn":26},{"ruleId":"273","severity":1,"message":"320","line":161,"column":11,"nodeType":"275","messageId":"276","endLine":161,"endColumn":23},{"ruleId":"273","severity":1,"message":"321","line":15,"column":12,"nodeType":"275","messageId":"276","endLine":15,"endColumn":19},{"ruleId":"273","severity":1,"message":"322","line":15,"column":12,"nodeType":"275","messageId":"276","endLine":15,"endColumn":21},{"ruleId":"281","severity":1,"message":"323","line":47,"column":7,"nodeType":"283","endLine":47,"endColumn":36,"suggestions":"324"},{"ruleId":"296","severity":1,"message":"297","line":92,"column":33,"nodeType":"298","messageId":"299","endLine":92,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":146,"column":27,"nodeType":"298","messageId":"327","endLine":163,"endColumn":22},{"ruleId":"309","severity":1,"message":"310","line":47,"column":87,"nodeType":"311","endLine":47,"endColumn":100},{"ruleId":"296","severity":1,"message":"297","line":93,"column":32,"nodeType":"298","messageId":"299","endLine":93,"endColumn":34},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'setLogoVal' is assigned a value but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHeaderData'. Either include it or remove the dependency array.","ArrayExpression",["330"],"'setCurrentUser' is assigned a value but never used.","'setFooterVal' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFlag'. Either include it or remove the dependency array.",["331"],"React Hook useEffect has missing dependencies: 'history', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'history', 'props', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["334"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["335"],"'checkCameraPermissions' is defined but never used.","'imgSrc' is assigned a value but never used.","'CapTime' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'props.isProctored', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["336"],"React Hook useEffect has missing dependencies: 'CaptureTime' and 'currentUser'. Either include them or remove the dependency array.",["337"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/style-prop-object","Style prop value must be an object","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'accessKeyId' is assigned a value but never used.","'secretAccessKey' is assigned a value but never used.","'sessionToken' is assigned a value but never used.","'logoVal' is assigned a value but never used.","'footerVal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["338"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'allPapers'.","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [getHeaderData, logoVal]",{"range":"357","text":"358"},"Update the dependencies array to be: [updateFlag]",{"range":"359","text":"360"},"Update the dependencies array to be: [history, props.location, setMsg, setShow]",{"range":"361","text":"362"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"363","text":"364"},"Update the dependencies array to be: [history, props, props.location, setPopupMsg, setPopupShow]",{"range":"365","text":"366"},"Update the dependencies array to be: [myExam, history, location.state]",{"range":"367","text":"368"},"Update the dependencies array to be: [exam, props.isProctored, setPopupShow, setPopupMsg]",{"range":"369","text":"370"},"Update the dependencies array to be: [history.location, capture, history, props, setPopupMsg, setPopupShow, CaptureTime, currentUser]",{"range":"371","text":"372"},"Update the dependencies array to be: [props, props.instId, setMsg, setShow]",{"range":"373","text":"374"},[3428,3437],"[getHeaderData, logoVal]",[9689,9691],"[updateFlag]",[1903,1919],"[history, props.location, setMsg, setShow]",[2081,2091],"[myOption, questionIndex]",[2512,2528],"[history, props, props.location, setPopupMsg, setPopupShow]",[945,961],"[myExam, history, location.state]",[1651,1677],"[exam, props.isProctored, setPopupShow, setPopupMsg]",[2668,2733],"[history.location, capture, history, props, setPopupMsg, setPopupShow, CaptureTime, currentUser]",[1584,1613],"[props, props.instId, setMsg, setShow]"]