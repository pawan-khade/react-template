[{"/home/pawan/Desktop/react-template-hooks/src/index.js":"1","/home/pawan/Desktop/react-template-hooks/src/App.js":"2","/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js":"3","/home/pawan/Desktop/react-template-hooks/src/api.js":"4","/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js":"5","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js":"6","/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js":"7","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js":"8","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js":"9","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js":"10","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js":"11","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js":"12","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js":"13","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js":"14","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js":"15","/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js":"16","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"17","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js":"18","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js":"19","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js":"20","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js":"21","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js":"22","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js":"24","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js":"25","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js":"26","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js":"27","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js":"28","/home/pawan/Desktop/react-template-hooks/src/popup.js":"29","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js":"30","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js":"31","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js":"32","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js":"33","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js":"34","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js":"35","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js":"36","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js":"37","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js":"38","/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js":"39","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js":"40","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js":"41"},{"size":199,"mtime":1610375291000,"results":"42","hashOfConfig":"43"},{"size":3421,"mtime":1612784694210,"results":"44","hashOfConfig":"43"},{"size":434,"mtime":1610102374000,"results":"45","hashOfConfig":"43"},{"size":143,"mtime":1610371769000,"results":"46","hashOfConfig":"43"},{"size":4428,"mtime":1613025530494,"results":"47","hashOfConfig":"43"},{"size":2856,"mtime":1611926524444,"results":"48","hashOfConfig":"43"},{"size":5390,"mtime":1611921540942,"results":"49","hashOfConfig":"43"},{"size":1187,"mtime":1611811622336,"results":"50","hashOfConfig":"43"},{"size":1068,"mtime":1611394431189,"results":"51","hashOfConfig":"43"},{"size":9398,"mtime":1613018436931,"results":"52","hashOfConfig":"43"},{"size":8298,"mtime":1613035406717,"results":"53","hashOfConfig":"43"},{"size":8196,"mtime":1612788301326,"results":"54","hashOfConfig":"43"},{"size":7659,"mtime":1613028897542,"results":"55","hashOfConfig":"43"},{"size":3410,"mtime":1611814970141,"results":"56","hashOfConfig":"43"},{"size":379,"mtime":1611403745246,"results":"57","hashOfConfig":"43"},{"size":4617,"mtime":1613018737807,"results":"58","hashOfConfig":"43"},{"size":2785,"mtime":1612593815083,"results":"59","hashOfConfig":"43"},{"size":2811,"mtime":1612257650542,"results":"60","hashOfConfig":"43"},{"size":9177,"mtime":1612417256712,"results":"61","hashOfConfig":"43"},{"size":2085,"mtime":1611406299706,"results":"62","hashOfConfig":"43"},{"size":1614,"mtime":1613019313683,"results":"63","hashOfConfig":"43"},{"size":3012,"mtime":1610529484000,"results":"64","hashOfConfig":"43"},{"size":4088,"mtime":1613019324654,"results":"65","hashOfConfig":"43"},{"size":2117,"mtime":1612415270209,"results":"66","hashOfConfig":"43"},{"size":7923,"mtime":1613028689238,"results":"67","hashOfConfig":"43"},{"size":454,"mtime":1611323235969,"results":"68","hashOfConfig":"43"},{"size":6482,"mtime":1612504088091,"results":"69","hashOfConfig":"43"},{"size":5022,"mtime":1612503584076,"results":"70","hashOfConfig":"43"},{"size":951,"mtime":1611738624378,"results":"71","hashOfConfig":"43"},{"size":6515,"mtime":1612506380595,"results":"72","hashOfConfig":"43"},{"size":4511,"mtime":1612505320977,"results":"73","hashOfConfig":"43"},{"size":459,"mtime":1611559269161,"results":"74","hashOfConfig":"43"},{"size":1195,"mtime":1611585258619,"results":"75","hashOfConfig":"43"},{"size":8950,"mtime":1612422046286,"results":"76","hashOfConfig":"43"},{"size":7927,"mtime":1610102374000,"results":"77","hashOfConfig":"43"},{"size":5040,"mtime":1612355818002,"results":"78","hashOfConfig":"43"},{"size":1260,"mtime":1611923776534,"results":"79","hashOfConfig":"43"},{"size":1849,"mtime":1612353593650,"results":"80","hashOfConfig":"43"},{"size":2392,"mtime":1612176576265,"results":"81","hashOfConfig":"43"},{"size":1710,"mtime":1612260609047,"results":"82","hashOfConfig":"43"},{"size":427,"mtime":1612353636668,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1iupvn5",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/pawan/Desktop/react-template-hooks/src/index.js",[],["172","173"],"/home/pawan/Desktop/react-template-hooks/src/App.js",[],"/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js",[],"/home/pawan/Desktop/react-template-hooks/src/api.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js",["174","175","176","177"],"/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js",["178","179"],"import React, { useContext } from 'react';\nimport {UserContext} from '../App';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() \n{\n    const {currentUser, setCurrentUser}   = useContext(UserContext);\n\n    if(currentUser && currentUser.role === 'STUDENT')\n    {\n        return (\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                    <div className=\"sb-sidenav-menu\">\n                        <div className=\"nav\">\n                            <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                            <Link className=\"nav-link\" to={{pathname: \"/studenthome\"}}>\n                                <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                Home\n                            </Link>\n                        </div>\n                    </div>\n                </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'ADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminhome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n\n                        <a className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseConfigurations\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-cogs\"></i></div>\n                                Configurations\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseConfigurations\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                            <nav className=\"sb-sidenav-menu-nested nav\">\n                                <Link className=\"nav-link\" to={{pathname: \"/configHeader\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Header\n                                </Link>\n                                <Link className=\"nav-link\" to={{pathname: \"/configFooter\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Footer\n                                </Link>\n                            </nav>\n                        </div>\n\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'EADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/insthome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/instreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\" aria-hidden=\"true\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Sidebar;","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js",["180"],"import React, { useContext } from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\n\nfunction LoginButton(props)\n{\n  let history                                     =   useHistory(props);\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        setCurrentUser(undefined);\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js",["181","182"],"/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js",["183","184","185","186","187"],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js",["188"],"import React, { useState , useEffect, useContext } from 'react';\nimport API from '../../api';\nimport CountCard from './CountCard';\nimport ExamCard from './ExamCard';\nimport { useLocation } from 'react-router-dom';\nimport {UserContext} from '../../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SearchBox from './SearchBox';\n\nfunction StudHome()\n{\n  const location                                  =   useLocation();\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n  let [loading, setLoading]                       =   useState(true);\n\n  const [userRequest, setUserRequest] = useState({\n    loading: true,\n    myExams: null,\n    numExams:0,\n    compExams:0,\n    yetToStartExam:0,\n    resumeExam:0,\n    expiredExam:0\n  });\n\n  //------------------------Restraining back button of browser--------------------\n  useEffect(() => \n  {\n    window.history.pushState(location.state, '', '/studenthome');\n  }, [location]);\n  //------------------------------------------------------------------------------\n\n  useEffect(() =>\n  {\n    getExamData(setUserRequest,setLoading);\n  },[]);\n\n  return (\n      !userRequest.loading && currentUser && !loading?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Student Home</h1>\n            <div className=\"breadcrumb col-lg-12 row\">\n              <div class=\"col-lg-6\">\n                <b>Student Name:</b> {currentUser.name} \n              </div>\n              <div class=\"col-lg-6\">\n                <b>Enrollment No:</b> ({currentUser.username})\n              </div>\n            </div>\n            \n            <div className=\"row col-lg-12\">\n              <CountCard count={userRequest.numExams} label={\"All\"} color={\"danger\"} onClick={() => {getExamData(setUserRequest,setLoading);}}/>\n              <CountCard count={userRequest.compExams} label={\"Completed\"} color={\"success\"} onClick={() => {getExamData(setUserRequest,setLoading,'over');}}/>\n              <CountCard count={userRequest.yetToStartExam} label={\"Yet To Start\"} color={\"warning\"} onClick={() => {getExamData(setUserRequest,setLoading,'yettostart');}}/>\n              <CountCard count={userRequest.resumeExam} label={\"Resume\"} color={\"primary\"} onClick={() => {getExamData(setUserRequest,setLoading,'inprogress');}}/>\n              <CountCard count={userRequest.expiredExam} label={\"Expired\"} color={\"info\"} onClick={() => {getExamData(setUserRequest,setLoading,'expired');}}/>\n              <SearchBox getExamData={getExamData} setUserRequest={setUserRequest} setLoading={setLoading}/>\n            </div>\n            <br/><br/>\n            <div className=\"row col-lg-12\">\n            {\n              userRequest.numExams ?\n              userRequest.myExams ? userRequest.myExams.data.map((exam) =>\n              (\n                  <ExamCard exam={exam} key={exam.id}/>\n              )) : null\n              : null\n            }\n            </div><br/>\n        </div>\n      </div> : \n      <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n        <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n      </div>\n  );\n}\n\n\nasync function getExamData(setUserRequest,setLoading,filter1='All')\n{\n        setLoading(true);\n        const res = await API.get('/exam');\n        let exams = await res.data;\n        //-------------------Sort data according to exam date for cards---------\n        let unsortedData= exams.data;\n        let sorted = {};\n        sorted = unsortedData.sort(function(a,b)\n        {\n          return a.paper.from_date - b.paper.from_date;\n        });\n        //----------------------------------------------------------------------\n        let i               = 0;\n        let compleated      = 0;\n        let yetToStart      = 0;\n        let resume          = 0;\n        let expired         = 0;\n        let numExams        = exams.data.length;\n        let EndTime         = '';\n        let Now             = '';\n        let overIndex          = [];\n        let inprogressIndex    = [];\n        let yetToStartIndex    = [];\n        let expiredIndex       = [];\n\n        Object.keys(sorted).forEach(function(key)\n        {\n          EndTime           = sorted[key].paper.to_date;\n          Now               = sorted[key].now;\n\n          if(sorted[key].examstatus === 'over')\n          {\n            compleated = compleated+1;\n            overIndex.push(key);\n          }\n          else if(sorted[key].examstatus === '')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              yetToStart = yetToStart+1;\n              yetToStartIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'inprogress')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              resume = resume+1;\n              inprogressIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'expired')\n          {\n            expired = expired+1;\n            expiredIndex.push(key);\n          }\n        });\n\n        //---------------------------Filtering array based on examStatus-------\n        if(filter1 === 'over')\n        {\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n        }\n        else if(filter1 === 'inprogress')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n        }\n        else if(filter1 === 'expired')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        else if(filter1 === 'yettostart')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        else if(filter1==='All')\n        {\n\n        }\n        else\n        {\n          let searched = [];\n          //-------------------------Search Paper Name-------------------------------------\n            for(let i=0;i<sorted.length;i++)\n            {\n              let paper_name = sorted[i].paper.paper_name.toLowerCase();\n              let myFilter = filter1.toLowerCase();\n\n              if(paper_name.includes(myFilter))\n              {\n                searched.push(sorted[i]);\n              }\n            }\n            exams.data = searched;\n          //-------------------------------------------------------------------------------\n        }\n        //---------------------------------------------------------------------\n        if(exams.data)\n        {\n          setUserRequest({ loading:false, myExams:exams, numExams:numExams,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n        }\n        else\n        {\n          setUserRequest({ loading:false, myExams:exams, numExams:0,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n        }\n        setLoading(false);\n}\n\nexport default StudHome;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js",["189","190"],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js",["191","192","193","194","195","196","197","198","199","200","201"],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js",[],"/home/pawan/Desktop/react-template-hooks/src/popup.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js",["202","203","204"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport API from '../../../api';\nimport Axios from 'axios';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Moment from 'react-moment';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {ShowContext} from '../../../App';\n\n\nfunction InstExamReport(props)\n{\n    const {setShow,setMsg}                          =   useContext(ShowContext);\n    const [allPapers, setAllPapers]                 =   useState([]);\n    const [allExams, setAllExams]                   =   useState([]);\n    let [loading, setLoading]                       =   useState(true);\n    const header                                    =   getHeader(allExams);\n    const data                                      =   getData(allPapers,allExams,props);\n    const options = {\n        sizePerPageList: [\n            {\n                text: '5', value: 5\n            }, \n            {\n                text: '10', value: 10\n            }, \n            {\n                text: '50', value: 50\n            },\n            {\n                text: '500', value: 500\n            }, \n            {\n                text: '1000', value: 1000\n            }, \n            {\n                text: '10000', value: 10000\n            }\n        ]\n    };\n   \n    useEffect(() => \n    {\n        getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props);\n    },[props.instId,setMsg,setShow]);\n\n    return (\n    allPapers.length > 0 && !loading ?\n      <div>\n        <div className=\"container-fluid\">\n            {(props.role==='' || props.role===undefined) &&(<h1 className=\"mt-4\">Institute Examination Report</h1>)}\n            {(props.role==='' || props.role===undefined) &&(<ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Institute Examination Report</li>\n            </ol>)}<br/>\n            <div className=\"row col-lg-12\" style={{overflow:\"auto\"}}>\n                \n                <BootstrapTable keyField='srno' data={ data } columns={ header } filter={ filterFactory() } pagination={ paginationFactory(options) }/>\n            </div>\n        </div>\n      </div>\n      : <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n            <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n        </div>\n    );\n}\n\nfunction getHeader(allExams)\n{\n    let myHeader = [\n        { text: 'Sr No', dataField: 'srno'},\n        { text: 'Date & Start Time', dataField: 'datenstarttime',filter: textFilter()},\n        { text: 'Code', dataField: 'code',filter: textFilter()},\n        { text: 'Subject Name', dataField: 'subjectname',filter: textFilter()},\n        { text: 'Marks', dataField: 'marks'},\n        { text: 'Total Q\\'s', dataField: 'totquestions'},\n        { text: 'Duration', dataField: 'duration'},\n        { text: 'Total Students', dataField: 'totstud'},\n        { text: 'Total End', dataField: 'totend'},\n        { text: 'Total Inprogress', dataField: 'totinprogress'},\n        { text: 'Total Not Attend', dataField: 'totnotattend'},\n    ];\n    return myHeader;\n}\n\nfunction getData(allPapers,allExams,props)\n{\n    let myData = [];\n    let i = 1;\n\n    allPapers.map((data, index) => {\n        //console.log('index:'+index+' Data:'+allExams[index]);\n        let paper_name = (props.role==='ADMIN') ?  <Link to={{pathname: '/instructions',state: {exam:allExams[index],role:'ADMIN'}}}>{data.paper_name}</Link> :  data.paper_name ;\n\n        myData.push({\n            srno                    : i++,\n            datenstarttime          : <Moment format=\"YYYY-MM-DD H:mm:ss\">{data.from_date}</Moment>,\n            code                    : data.paper_code,\n            subjectname             : paper_name,\n            marks                   : data.marks,\n            totquestions            : data.questions,\n            duration                : data.durations,\n            totstud                 : getCount(allExams,'total',data.id),\n            totend                  : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'over',paper_code:data.paper_code}}}> {getCount(allExams,'end',data.id)}</Link>,\n            totinprogress           : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'inprogress',paper_code:data.paper_code}}}> {getCount(allExams,'inprogress',data.id)}  </Link>,\n            totnotattend            : <Link to={{pathname: \"/instexamstudentreport\", state:{data:allExams,paper_id:data.id,type:'notattend',paper_code:data.paper_code}}}>{getCount(allExams,'notattend',data.id)} </Link>\n        })   \n    })\n\n    return myData;\n}\n\nasync function getPrograms(setAllPapers,setAllExams,setLoading,setShow,setMsg,props)\n{\n    let allPapers = [];\n    let allExams  = [];\n    let res       = [];\n    if(props.role==='ADMIN')\n    {\n        if(props.instId === '')\n        {\n            setMsg('Please Select Institute to get its report...');\n            setShow(true);\n            setAllPapers([]);\n            setAllExams([]);\n        }\n        //console.log(props.instId);\n        res = await API.get('/program/'+props.instId);\n    }\n    else\n    {\n        res = await API.get('/program');\n    }\n        if(res.data.status==='success')\n        {\n            if(res.data.data.length > 0)\n            {\n                //console.log(res.data.data.length);\n                for(let i=0;i<res.data.data.length;i++)\n                {\n                    await Axios.all([\n                            API.get('/paper',{ params: {\"program_id\":res.data.data[i].id}}),\n                            API.get('/exam/'+res.data.data[i].id,{ params: {\"type\":\"byprogramid\"}})\n                    ])\n                    .then(responseArr => \n                    {\n                        if(responseArr[0].data.status==='success')\n                        {\n                            if(responseArr[0].data.data.length > 0)\n                            {\n                                allPapers.push(...responseArr[0].data.data);\n                            }\n                        }   \n                        \n                        if(responseArr[1].data.status==='success')\n                        {\n                            if(responseArr[1].data.data.length > 0)\n                            {\n                                allExams.push(...responseArr[1].data.data);\n                            }\n                        }\n                    });\n                }\n                allPapers = [...allPapers];\n                allPapers = [...new Set(allPapers)];\n\n                allPapers.sort(function(a,b)\n                {\n                    return a.from_date - b.from_date;\n                });\n                \n                if(allPapers.length > 0 && allExams.length > 0)\n                {\n                    setAllPapers(allPapers);\n                    setAllExams(allExams);\n                    setLoading(false);\n                } \n            }\n            else\n            {\n                setAllPapers([]);\n                setAllExams([]);\n                setShow(true);\n                setMsg('No Program Data found for this Institute.Please Add data or Configure it Properly...');\n                setLoading(false);\n            }\n        }\n        else\n        {\n            setAllPapers([]);\n            setAllExams([]);\n            setShow(true);\n            setMsg('Problem fetching data from Server...');\n            setLoading(false);\n        }\n}\n\nfunction getCount(allExams,str,paper_id)\n{\n    let total=0;\n    let end=0;\n    let inprogress=0;\n    let absent=0;\n\n    if(str === 'total')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id))\n            {\n                total++;\n            }\n        }\n        return total;\n    }\n    else if(str === 'end')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'over')\n            {\n                end++;\n            }\n        }\n        return end;\n    }\n    else if(str === 'inprogress')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'inprogress')\n            {\n                inprogress++;\n            }\n        }\n        return inprogress;\n    }\n    else if(str === 'notattend')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === '')\n            {\n                absent++;\n            }\n        }\n        return absent;\n    }\n}\n\nexport default InstExamReport;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/SearchBox.js",["205"],"import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction SearchBox(props)\n{\n    return (\n    <>  \n        <Formik\n            initialValues={{ searchSubject:\"\"}}\n            onSubmit={(values,{ setSubmitting }) =>\n            {\n                props.getExamData(props.setUserRequest,props.setLoading,values.searchSubject);\n            }}\n            validationSchema={Yup.object().shape({\n                searchSubject:Yup.string()\n                .required(\"Subject Name is Required...\")\n            })}\n            >\n            {\n                props => \n                {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    } = props;\n\n                    return (\n                        <div className=\"col-lg-2\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"input-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        type=\"text\" \n                                        name=\"searchSubject\" \n                                        id=\"searchSubject\" \n                                        placeholder=\"Subjects...\"\n                                        value ={values.searchSubject}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                    />\n                                    <div className=\"input-group-append\">\n                                    <button type=\"button\" className=\"btn btn-primary\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                                    </div>\n                                    {errors.searchSubject && touched.searchSubject && (\n                                        <div className=\"alert alert-info col-lg-12\">{errors.searchSubject}</div>\n                                    )}\n                                </div>\n                            </form>\n                        </div>\n                    );\n                }\n            }\n        </Formik>\n    </>\n    );\n}\n\nexport default SearchBox;","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndPreviewButton.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":16,"column":10,"nodeType":"212","messageId":"213","endLine":16,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":64,"column":17,"nodeType":"216","endLine":64,"endColumn":60},{"ruleId":"217","severity":1,"message":"218","line":64,"column":60,"nodeType":"216","endLine":64,"endColumn":102},{"ruleId":"219","severity":1,"message":"220","line":104,"column":7,"nodeType":"221","endLine":104,"endColumn":9,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"223","line":7,"column":25,"nodeType":"212","messageId":"213","endLine":7,"endColumn":39},{"ruleId":"214","severity":1,"message":"215","line":41,"column":25,"nodeType":"216","endLine":41,"endColumn":174},{"ruleId":"210","severity":1,"message":"224","line":9,"column":10,"nodeType":"212","messageId":"213","endLine":9,"endColumn":21},{"ruleId":"210","severity":1,"message":"224","line":16,"column":10,"nodeType":"212","messageId":"213","endLine":16,"endColumn":21},{"ruleId":"219","severity":1,"message":"225","line":195,"column":38,"nodeType":"221","endLine":195,"endColumn":40,"suggestions":"226"},{"ruleId":"219","severity":1,"message":"227","line":45,"column":6,"nodeType":"221","endLine":45,"endColumn":22,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":55,"column":6,"nodeType":"221","endLine":55,"endColumn":16,"suggestions":"230"},{"ruleId":"219","severity":1,"message":"231","line":68,"column":6,"nodeType":"221","endLine":68,"endColumn":22,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":195,"column":34,"nodeType":"235","messageId":"236","endLine":195,"endColumn":36},{"ruleId":"233","severity":1,"message":"234","line":212,"column":34,"nodeType":"235","messageId":"236","endLine":212,"endColumn":36},{"ruleId":"210","severity":1,"message":"223","line":13,"column":23,"nodeType":"212","messageId":"213","endLine":13,"endColumn":37},{"ruleId":"219","severity":1,"message":"237","line":35,"column":6,"nodeType":"221","endLine":35,"endColumn":22,"suggestions":"238"},{"ruleId":"210","severity":1,"message":"239","line":122,"column":10,"nodeType":"212","messageId":"213","endLine":122,"endColumn":32},{"ruleId":"210","severity":1,"message":"223","line":10,"column":25,"nodeType":"212","messageId":"213","endLine":10,"endColumn":39},{"ruleId":"210","severity":1,"message":"240","line":13,"column":12,"nodeType":"212","messageId":"213","endLine":13,"endColumn":18},{"ruleId":"210","severity":1,"message":"241","line":18,"column":11,"nodeType":"212","messageId":"213","endLine":18,"endColumn":18},{"ruleId":"219","severity":1,"message":"242","line":41,"column":9,"nodeType":"221","endLine":41,"endColumn":35,"suggestions":"243"},{"ruleId":"219","severity":1,"message":"244","line":71,"column":7,"nodeType":"221","endLine":71,"endColumn":72,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":85,"column":60,"nodeType":"248","endLine":85,"endColumn":79},{"ruleId":"249","severity":1,"message":"250","line":85,"column":67,"nodeType":"212","endLine":85,"endColumn":78},{"ruleId":"251","severity":1,"message":"252","line":121,"column":17,"nodeType":"253","messageId":"254","endLine":121,"endColumn":19},{"ruleId":"210","severity":1,"message":"255","line":159,"column":11,"nodeType":"212","messageId":"213","endLine":159,"endColumn":22},{"ruleId":"210","severity":1,"message":"256","line":160,"column":11,"nodeType":"212","messageId":"213","endLine":160,"endColumn":26},{"ruleId":"210","severity":1,"message":"257","line":161,"column":11,"nodeType":"212","messageId":"213","endLine":161,"endColumn":23},{"ruleId":"219","severity":1,"message":"258","line":47,"column":7,"nodeType":"221","endLine":47,"endColumn":36,"suggestions":"259"},{"ruleId":"233","severity":1,"message":"234","line":92,"column":33,"nodeType":"235","messageId":"236","endLine":92,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":146,"column":27,"nodeType":"235","messageId":"262","endLine":163,"endColumn":22},{"ruleId":"246","severity":1,"message":"247","line":47,"column":87,"nodeType":"248","endLine":47,"endColumn":100},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHeaderData'. Either include it or remove the dependency array.","ArrayExpression",["265"],"'setCurrentUser' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFlag'. Either include it or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'history', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'history', 'props', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["269"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["270"],"'checkCameraPermissions' is defined but never used.","'imgSrc' is assigned a value but never used.","'CapTime' is assigned a value but never used.","React Hook React.useCallback has missing dependencies: 'props.isProctored', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'CaptureTime' and 'currentUser'. Either include them or remove the dependency array.",["272"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/style-prop-object","Style prop value must be an object","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'accessKeyId' is assigned a value but never used.","'secretAccessKey' is assigned a value but never used.","'sessionToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["273"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'allPapers'.","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [getHeaderData]",{"range":"292","text":"293"},"Update the dependencies array to be: [updateFlag]",{"range":"294","text":"295"},"Update the dependencies array to be: [history, props.location, setMsg, setShow]",{"range":"296","text":"297"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"298","text":"299"},"Update the dependencies array to be: [history, props, props.location, setPopupMsg, setPopupShow]",{"range":"300","text":"301"},"Update the dependencies array to be: [myExam, history, location.state]",{"range":"302","text":"303"},"Update the dependencies array to be: [exam, props.isProctored, setPopupShow, setPopupMsg]",{"range":"304","text":"305"},"Update the dependencies array to be: [history.location, capture, history, props, setPopupMsg, setPopupShow, CaptureTime, currentUser]",{"range":"306","text":"307"},"Update the dependencies array to be: [props, props.instId, setMsg, setShow]",{"range":"308","text":"309"},[3682,3684],"[getHeaderData]",[9100,9102],"[updateFlag]",[1903,1919],"[history, props.location, setMsg, setShow]",[2081,2091],"[myOption, questionIndex]",[2512,2528],"[history, props, props.location, setPopupMsg, setPopupShow]",[850,866],"[myExam, history, location.state]",[1651,1677],"[exam, props.isProctored, setPopupShow, setPopupMsg]",[2668,2733],"[history.location, capture, history, props, setPopupMsg, setPopupShow, CaptureTime, currentUser]",[1584,1613],"[props, props.instId, setMsg, setShow]"]