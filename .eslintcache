[{"/home/pawan/Desktop/react-template-hooks/src/index.js":"1","/home/pawan/Desktop/react-template-hooks/src/App.js":"2","/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js":"3","/home/pawan/Desktop/react-template-hooks/src/api.js":"4","/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js":"5","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js":"6","/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js":"7","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js":"8","/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js":"9","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js":"10","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js":"11","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js":"12","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js":"13","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js":"14","/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js":"15","/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js":"16","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js":"17","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js":"18","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js":"19","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js":"20","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js":"21","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js":"22","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js":"23","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js":"24","/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js":"25","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js":"26","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js":"27","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js":"28","/home/pawan/Desktop/react-template-hooks/src/popup.js":"29","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js":"30","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js":"31","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js":"32","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js":"33","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js":"34","/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js":"35","/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js":"36","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js":"37","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js":"38"},{"size":199,"mtime":1610375291000,"results":"39","hashOfConfig":"40"},{"size":3399,"mtime":1611809611822,"results":"41","hashOfConfig":"40"},{"size":434,"mtime":1610102374000,"results":"42","hashOfConfig":"40"},{"size":143,"mtime":1610371769000,"results":"43","hashOfConfig":"40"},{"size":4399,"mtime":1611810550858,"results":"44","hashOfConfig":"40"},{"size":2856,"mtime":1611926524444,"results":"45","hashOfConfig":"40"},{"size":5390,"mtime":1611921540942,"results":"46","hashOfConfig":"40"},{"size":1187,"mtime":1611811622336,"results":"47","hashOfConfig":"40"},{"size":1068,"mtime":1611394431189,"results":"48","hashOfConfig":"40"},{"size":8768,"mtime":1611816310640,"results":"49","hashOfConfig":"40"},{"size":7317,"mtime":1611398221823,"results":"50","hashOfConfig":"40"},{"size":7058,"mtime":1611812489243,"results":"51","hashOfConfig":"40"},{"size":4780,"mtime":1611306543448,"results":"52","hashOfConfig":"40"},{"size":3410,"mtime":1611814970141,"results":"53","hashOfConfig":"40"},{"size":379,"mtime":1611403745246,"results":"54","hashOfConfig":"40"},{"size":4540,"mtime":1611126036086,"results":"55","hashOfConfig":"40"},{"size":2757,"mtime":1611118230139,"results":"56","hashOfConfig":"40"},{"size":2735,"mtime":1611813242294,"results":"57","hashOfConfig":"40"},{"size":9053,"mtime":1611812778662,"results":"58","hashOfConfig":"40"},{"size":2085,"mtime":1611406299706,"results":"59","hashOfConfig":"40"},{"size":1535,"mtime":1610102374000,"results":"60","hashOfConfig":"40"},{"size":3012,"mtime":1610529484000,"results":"61","hashOfConfig":"40"},{"size":4088,"mtime":1610380881000,"results":"62","hashOfConfig":"40"},{"size":1907,"mtime":1611750105288,"results":"63","hashOfConfig":"40"},{"size":2626,"mtime":1611814243578,"results":"64","hashOfConfig":"40"},{"size":454,"mtime":1611323235969,"results":"65","hashOfConfig":"40"},{"size":6135,"mtime":1611931479145,"results":"66","hashOfConfig":"40"},{"size":4970,"mtime":1611323508452,"results":"67","hashOfConfig":"40"},{"size":951,"mtime":1611738624378,"results":"68","hashOfConfig":"40"},{"size":6154,"mtime":1611738257126,"results":"69","hashOfConfig":"40"},{"size":4248,"mtime":1611737997386,"results":"70","hashOfConfig":"40"},{"size":459,"mtime":1611559269161,"results":"71","hashOfConfig":"40"},{"size":1195,"mtime":1611585258619,"results":"72","hashOfConfig":"40"},{"size":8735,"mtime":1612003496896,"results":"73","hashOfConfig":"40"},{"size":7927,"mtime":1610102374000,"results":"74","hashOfConfig":"40"},{"size":4232,"mtime":1611905627021,"results":"75","hashOfConfig":"40"},{"size":1260,"mtime":1611923776534,"results":"76","hashOfConfig":"40"},{"size":1712,"mtime":1612003591715,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1iupvn5",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pawan/Desktop/react-template-hooks/src/index.js",[],["163","164"],"/home/pawan/Desktop/react-template-hooks/src/App.js",[],"/home/pawan/Desktop/react-template-hooks/src/AlertDismissible.js",[],"/home/pawan/Desktop/react-template-hooks/src/api.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Header.js",["165","166","167","168"],"import React, { useState , useEffect, useContext } from 'react';\nimport LoginButton from '../Components/LoginButton';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {ShowContext} from '../App';\nimport API from '../api';\n\nfunction Header()\n{\n    const {setShow,setMsg} = useContext(ShowContext);\n\n    let history                         =   useHistory();\n    let location                        =   useLocation();\n    let [toggle, setToggle]             =   useState(true);\n    let [isLoggedIn, setIsLoggedIn]     =   useState(false);\n    let [isStartExam, setIsStartExam]   =   useState(false);\n    let [isLoaded,setIsLoaded]          =   useState(false);\n    let myHeader                        =   useHeader(setIsLoaded);\n\n    useEffect(() =>\n    {\n      let PathName = location.pathname;\n      const searchString = process.env.REACT_APP_NON_AUTH_PATHS.split(' ').find((str) => str === PathName);\n      if(PathName==='/startexam')\n      {\n        if(window.innerWidth < 1000)\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.remove('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n        }\n        else\n        {\n            setIsStartExam(true);\n            setToggle(true);\n            document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n        }\n      }\n      else\n      {\n        setIsStartExam(false);\n        setToggle(false);\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n      }\n      if(PathName!==searchString)\n      {\n          setIsLoggedIn(true);\n      }\n      else\n      {\n          setIsLoggedIn(false);\n      }\n\n      if(PathName === '/login')\n      {\n        document.body.classList.add('bg-primary');\n        setToggle(true);\n        document.body.classList.remove('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n      }\n      else\n      {\n        document.body.classList.remove('bg-primary');\n      }\n    },[location,history,setShow,setMsg]);\n\n\n    return(\n          !isStartExam ?\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href={void(0)}><img src=\"assets/images/logo.png\" height=\"50\" width=\"50\"></img> {myHeader}</a>\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={() => {toggleSidebar(setToggle,toggle)}}><i className=\"fas fa-bars\"></i></button>\n\n               <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n                     {/*<div className=\"input-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                        </div>\n                    </div>*/}\n                </form>\n                { isLoggedIn ? <LoginButton url={'/logout'} label={'Logout'} setIsLoggedIn={setIsLoggedIn}/>: null}\n            </nav>\n            : null\n    );\n}\n\nfunction toggleSidebar(setToggle,toggle)\n{\n    setToggle(!toggle);\n    if(!toggle)\n    {\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n    }\n    else\n    {\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n    }\n}\n\n\n\nfunction useHeader(setIsLoaded)\n{\n    let [myHeader,setMyHeader]          =   useState('GudExams');\n\n    useEffect(() =>\n    {\n        getHeaderData();\n    },[]);\n    \n    async function getHeaderData()\n    {\n        await API.get('/configurations',{params :{\"type\":\"headerconfig\"}})\n        .then(function (res) \n        {\n            if(res.data.status === 'success')\n            {\n                setMyHeader(res.data.header);\n                setIsLoaded(true);\n            }\n            else\n            {\n                setMyHeader('GudExams');\n                setIsLoaded(true);\n            }\n        })\n        .catch(function (error) \n        {\n            setMyHeader('GudExams');\n            setIsLoaded(true);\n        })\n    }\n\n    return myHeader\n}\n\nexport default Header;\n","/home/pawan/Desktop/react-template-hooks/src/Layout/Content.js",[],"/home/pawan/Desktop/react-template-hooks/src/Layout/Sidebar.js",["169","170"],"import React, { useContext } from 'react';\nimport {UserContext} from '../App';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar() \n{\n    const {currentUser, setCurrentUser}   = useContext(UserContext);\n\n    if(currentUser && currentUser.role === 'STUDENT')\n    {\n        return (\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                    <div className=\"sb-sidenav-menu\">\n                        <div className=\"nav\">\n                            <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                            <Link className=\"nav-link\" to={{pathname: \"/studenthome\"}}>\n                                <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                Home\n                            </Link>\n                        </div>\n                    </div>\n                </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'ADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminhome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n\n                        <a className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseConfigurations\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-cogs\"></i></div>\n                                Configurations\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\"></i></div>\n                        </a>\n                        <div className=\"collapse\" id=\"collapseConfigurations\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\n                            <nav className=\"sb-sidenav-menu-nested nav\">\n                                <Link className=\"nav-link\" to={{pathname: \"/configHeader\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Header\n                                </Link>\n                                <Link className=\"nav-link\" to={{pathname: \"/configFooter\"}}>\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tools\"></i></div>\n                                    Configure Footer\n                                </Link>\n                            </nav>\n                        </div>\n\n                        <Link  className=\"nav-link\" to={{pathname: \"/adminreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else if(currentUser && currentUser.role === 'EADMIN')\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/insthome\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/clearsession\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-address-card\"></i></div>\n                            Clear Session\n                        </Link>\n                        <Link  className=\"nav-link\" to={{pathname: \"/instreports\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-clipboard-list\" aria-hidden=\"true\"></i></div>\n                            Reports\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n    else\n    {\n        return (\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                <div className=\"sb-sidenav-menu\">\n                    <div className=\"nav\">\n                        <div className=\"sb-sidenav-menu-heading\">Main Menu</div>\n                        <Link  className=\"nav-link\" to={{pathname: \"/\"}}>\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                            Home\n                        </Link>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Sidebar;","/home/pawan/Desktop/react-template-hooks/src/Layout/Footer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/LoginButton.js",["171"],"import React, { useContext } from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\n\nfunction LoginButton(props)\n{\n  let history                                     =   useHistory(props);\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        setCurrentUser(undefined);\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Login.js",["172","173"],"import React, { useState , useEffect, useContext  } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../api';\nimport ReCAPTCHA   from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\nimport {UserContext} from '../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport default function Login(props)\n{\n  const {currentUser, setCurrentUser}               =    useContext(UserContext);\n  let history                                       =    useHistory();\n  const [myRecaptcha, setMyRecaptcha]               =    useState();\n  const [myMsg, setMyMsg]                           =    useState();\n  let [loading, setLoading]                         =    useState(true);\n  const flag                                        =    useFlag(setLoading);\n  const siteKey                                     =    process.env.REACT_APP_CAPTCHA_SITE_KEY;\n\n  return (\n    !loading ?\n        flag !== undefined && <Formik\n        initialValues={{ username: \"\", password: \"\", flag:flag ,instId:\"\" }}\n        onSubmit={(values,{ setSubmitting }) =>\n        {\n          if (myRecaptcha !== undefined){\n            checkLogin(values.username,values.password,values.instId,flag,myRecaptcha,setMyMsg,history,setCurrentUser);\n          }\n        }}\n        validationSchema={Yup.object().shape({\n            username:Yup.string()\n            .required(\"Username Required\"),\n            password: Yup.string()\n            .required(\"Password is Required\"),\n            flag: Yup.number(),\n            instId: Yup.string().when('flag', {\n              is:0,\n              then: Yup.string().required(\"Inst ID is Required\")\n            })\n        })}\n    >\n    {\n        props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props;\n            return (\n\n                <div style={{marginBottom:\"30px\"}}>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-5\">\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">GudExams Login</h3></div>\n                                    <div className=\"card-body\" >\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <label>User Name</label>\n\n                                                <input className=\"form-control py-4\" id=\"username\" type=\"text\"\n                                                value ={values.userame}\n                                                placeholder=\"Enter User Name\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.username && touched.username && \"error\"}\n                                                />\n\n                                                {errors.username && touched.username && (\n                                                    <div className=\"alert alert-info\">{errors.username}</div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-group\">Password</label>\n\n                                                <input className=\"form-control py-4\" id=\"password\" type=\"password\"\n                                                value ={values.password}\n                                                placeholder=\"Enter password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.password && touched.password && \"error\"}\n                                                />\n\n                                                {errors.password && touched.password && (\n                                                    <div className=\"alert alert-info\">{errors.password}</div>\n                                                )}\n                                            </div>\n\n                                            {flag === 0 && (<div className=\"form-group\">\n                                                <label className=\"form-group\">Inst ID</label>\n\n                                                <input className=\"form-control py-4\" id=\"instId\" type=\"instId\"\n                                                value ={values.instId}\n                                                placeholder=\"Enter Institute ID\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.instId && touched.instId && \"error\"}\n                                                />\n\n                                                {errors.instId && touched.instId && (\n                                                    <div className=\"alert alert-info\">{errors.instId}</div>\n                                                )}\n                                            </div>)}\n\n                                            <ReCAPTCHA name=\"myRecaptcha\" id=\"myRecaptcha\" size=\"compact\" sitekey={siteKey} badge=\"inline\" onChange={(value) => setMyRecaptcha(value)}/>\n\n                                            <div className=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                                <button className=\"btn btn-primary\" type=\"submit\" id=\"submit\" disabled={isSubmitting}>Login</button>\n                                            </div><br/>\n\n                                            {myMsg !== undefined && (\n                                                <div className=\"alert alert-success\">{myMsg}</div>\n                                            )}\n\n                                        </form>\n                                    </div>\n                                    <div className=\"card-footer text-center\">\n                                        <div className=\"small\"><a href=\"/register\">Need an account? Sign up!</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            );\n        }\n    }\n    </Formik>\n    :\n    <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"40%\"}}>\n        <ClipLoader color={'#ff0000'} loading={loading} size={100} />\n    </div>\n  );\n}\n\nasync function checkLogin(username,password,instId,flag,myRecaptcha,setMyMsg,history,setCurrentUser)\n{\n    await API.post('/login',{\"username\":username,\"password\":password,\"inst_id\":instId,\"flag\":flag,\"myRecaptcha\":myRecaptcha}).then(res =>\n    {\n        \n            if(res.data.status === 'success')\n            {\n                localStorage.setItem(\"token\",JSON.stringify(res.data.token));\n                if(res.data.data.role === 'STUDENT')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/studenthome',state:{currentUser: res.data.data}});\n                }\n                else if(res.data.data.role === 'ADMIN')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/adminhome',state:{currentUser: res.data.data}});\n                }\n                else if(res.data.data.role === 'EADMIN')\n                {\n                    setCurrentUser(res.data.data);\n                    history.replace({ pathname: '/insthome',state:{currentUser: res.data.data}});\n                }\n            }\n            else\n            {\n                setMyMsg(res.data.message);\n            }\n    })\n}\n\n\n\nfunction useFlag(setLoading)\n{\n    const [flag, setFlag]   =    useState();\n\n    useEffect(() => {updateFlag();}, []);\n\n    async function updateFlag()\n    {\n        setLoading(true);\n        const res = await API.get('/settings',{params: {\"type\":\"login\"}});\n        if(res.data.status==='success')\n        {\n            setFlag(res.data.flag);\n            setLoading(false);\n        }\n    }\n\n    return flag;\n}\n","/home/pawan/Desktop/react-template-hooks/src/Components/Startexam.js",["174","175","176","177","178"],"import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\nimport {PopupContext} from '../App';\nimport WebCamCapture from './Exam/WebCamCapture';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg}                          =   useContext(ShowContext);\n  const {setPopupShow,setPopupMsg}                =   useContext(PopupContext);\n  let history                                     =   useHistory();\n  let [myOption, setMyOption]                     =   useState();\n  let [myPhotoCapture, setMyPhotoCapture]         =   useState(false);\n  let [myCameraPerm, setMyCameraPerm]             =   useState(false);\n\n  if(props.location.state)\n  {\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => \n  {\n    if (props.location.state === undefined)\n    {\n      setShow(true);\n      setMsg('You are redirected because you have refreshed the examination page forcefully');\n      history.replace('/studenthome');\n    }\n  }, [props.location])\n\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption}\n      });\n    }\n  }, [myOption]);\n//----------------------Catching Opening of other window------------------------\n  useEffect(() =>\n  {\n    const onBlurCallback = () => onBlur(props, setPopupShow,setPopupMsg, history);\n    window.addEventListener('blur', onBlurCallback);\n    return () =>\n    {\n      window.removeEventListener('blur', onBlurCallback);\n    };\n  }, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Restraining back button of browser--------------------\n  useEffect(() => {\n  window.history.pushState(props.location.state, '', '/startexam');\n}, [props.location]);\n//------------------------------------------------------------------------------\n//------------------------Proctoring -------------------------------------------\nuseEffect(() => {\n\n  if(props.location.state)\n  {\n    if(props.location.state.exam.paper.photo_capture)\n    {\n      setMyPhotoCapture(true);\n    }\n    else\n    {\n      setMyCameraPerm(true);\n    }\n  }\n}, [props.location]);\n//------------------------------------------------------------------------------\n\n  return (\n    props.location.state ?\n      <div className=\"row\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Subject Name: {props.location.state.exam.paper.paper_name} ({props.location.state.exam.paper.paper_code}) </b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\" style={{float:\"right\"}}></i> &nbsp;&nbsp;\n                      {myCameraPerm && (<div style={{float:\"right\"}}><MyTimer data={props}/></div>)}\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n            {myCameraPerm && (<QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>)}\n              <hr/>\n              <div className=\"col-lg-12 row\">\n              {myCameraPerm && (<PreviousButton data={props} setMyOption={setMyOption}/>)}\n              {myCameraPerm && (<NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption} setSelectedOptions={setSelectedOptions} />)}\n              {myCameraPerm && (<EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>)}\n              {myCameraPerm && (<ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>)}\n                {myPhotoCapture && (<WebCamCapture exam={props.location.state.exam.id} setMyCameraPerm={setMyCameraPerm}/>)}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n          {myCameraPerm && (<QuestionButtons qas={props} setSelectedOptions={setSelectedOptions} setMyOption={setMyOption}/>)}\n          {myCameraPerm && (<OverallSummery data={props}/>)}\n          </div>\n      </div> : null\n  );\n}\n\nasync function onBlur(props, setPopupShow,setPopupMsg, history)\n{\n  const exam                    = props.location.state.exam;\n  const total_allowable_alerts  = props.location.state.exam.paper.exam_switch_alerts;\n  const ExamId                  = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setPopupShow,setPopupMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        setPopupShow(true);\n        setPopupMsg('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        setPopupShow(true);\n        setPopupMsg('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    setPopupShow(true);\n    setPopupMsg('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setPopupShow,setPopupMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setPopupShow(true);\n      setPopupMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    setPopupShow(true);\n    setPopupMsg('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    originalSelectedOptions[index] = question.stdanswer\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/StudHome.js",["179"],"import React, { useState , useEffect, useContext } from 'react';\nimport API from '../../api';\nimport CountCard from './CountCard';\nimport ExamCard from './ExamCard';\nimport { useLocation } from 'react-router-dom';\nimport {UserContext} from '../../App';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction StudHome()\n{\n  const location                                  =   useLocation();\n  const {currentUser, setCurrentUser}             =   useContext(UserContext);\n  let [loading, setLoading]                       =   useState(true);\n\n  const [userRequest, setUserRequest] = useState({\n    loading: true,\n    myExams: null,\n    numExams:0,\n    compExams:0,\n    yetToStartExam:0,\n    resumeExam:0,\n    expiredExam:0\n  });\n\n  //------------------------Restraining back button of browser--------------------\n  useEffect(() => \n  {\n    window.history.pushState(location.state, '', '/studenthome');\n  }, [location]);\n  //------------------------------------------------------------------------------\n\n  useEffect(() =>\n  {\n    getExamData(setUserRequest,setLoading);\n  },[]);\n\n  return (\n      !userRequest.loading && currentUser && !loading?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Student Home</h1>\n            <div className=\"breadcrumb col-lg-12 row\">\n              <div class=\"col-lg-6\">\n                <b>Student Name:</b> {currentUser.name} \n              </div>\n              <div class=\"col-lg-6\">\n                <b>Enrollment No:</b> ({currentUser.username})\n              </div>\n            </div>\n            \n            <div className=\"row col-lg-12\">\n              <CountCard count={userRequest.numExams} label={\"All\"} color={\"danger\"} onClick={() => {getExamData(setUserRequest,setLoading);}}/>\n              <CountCard count={userRequest.compExams} label={\"Completed\"} color={\"success\"} onClick={() => {getExamData(setUserRequest,setLoading,'over');}}/>\n              <CountCard count={userRequest.yetToStartExam} label={\"Yet To Start\"} color={\"warning\"} onClick={() => {getExamData(setUserRequest,setLoading,'yettostart');}}/>\n              <CountCard count={userRequest.resumeExam} label={\"Resume\"} color={\"primary\"} onClick={() => {getExamData(setUserRequest,setLoading,'inprogress');}}/>\n              <CountCard count={userRequest.expiredExam} label={\"Expired\"} color={\"info\"} onClick={() => {getExamData(setUserRequest,setLoading,'expired');}}/>\n            </div>\n            <br/><br/>\n            <div className=\"row col-lg-12\">\n            {\n              userRequest.myExams ? userRequest.myExams.data.map((exam) =>\n              (\n                  <ExamCard exam={exam} key={exam.id}/>\n              )) : null\n            }\n            </div><br/>\n        </div>\n      </div> : \n      <div className=\"col-lg-12\" style={{position:\"absolute\",top:\"40%\",left:\"50%\"}}>\n        <ClipLoader color={'#ff0000'} loading={loading} size={200} />\n      </div>\n  );\n}\n\n\nasync function getExamData(setUserRequest,setLoading,filter1='All')\n{\n        setLoading(true);\n        const res = await API.get('/exam');\n        const exams = await res.data;\n        //-------------------Sort data according to exam date for cards---------\n        let unsortedData= exams.data;\n        let sorted = {};\n        sorted = unsortedData.sort(function(a,b)\n        {\n          return a.paper.from_date - b.paper.from_date;\n        });\n        //----------------------------------------------------------------------\n        let i               = 0;\n        let compleated      = 0;\n        let yetToStart      = 0;\n        let resume          = 0;\n        let expired         = 0;\n        let EndTime         = '';\n        let Now             = '';\n        let overIndex          = [];\n        let inprogressIndex    = [];\n        let yetToStartIndex    = [];\n        let expiredIndex       = [];\n\n        Object.keys(sorted).forEach(function(key)\n        {\n          EndTime           = sorted[key].paper.to_date;\n          Now               = sorted[key].now;\n\n          if(sorted[key].examstatus === 'over')\n          {\n            compleated = compleated+1;\n            overIndex.push(key);\n          }\n          else if(sorted[key].examstatus === '')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              yetToStart = yetToStart+1;\n              yetToStartIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'inprogress')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n              expiredIndex.push(key);\n            }\n            else\n            {\n              resume = resume+1;\n              inprogressIndex.push(key);\n            }\n          }\n          else if(sorted[key].examstatus === 'expired')\n          {\n            expired = expired+1;\n            expiredIndex.push(key);\n          }\n        });\n\n        //---------------------------Filtering array based on examStatus-------\n        if(filter1 === 'over')\n        {\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n        }\n        else if(filter1 === 'inprogress')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n        }\n        else if(filter1 === 'expired')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< yetToStartIndex.length;i++)\n          {\n            delete sorted[yetToStartIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        else if(filter1 === 'yettostart')\n        {\n          for(i=0;i< overIndex.length;i++)\n          {\n            delete sorted[overIndex[i]];\n          }\n          \n          for(i=0;i< expiredIndex.length;i++)\n          {\n            delete sorted[expiredIndex[i]];\n          }\n\n          for(i=0;i< inprogressIndex.length;i++)\n          {\n            delete sorted[inprogressIndex[i]];\n          }\n        }\n        //---------------------------------------------------------------------\n        setUserRequest({ loading:false, myExams:exams, numExams:exams.data.length,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n        setLoading(false);\n}\n\nexport default StudHome;\n","/home/pawan/Desktop/react-template-hooks/src/Components/Student/Instructions.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/MyTimer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/CountCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Student/ExamCard.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionAnswer.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/QuestionButtons.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/NextSaveButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/EndExamButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/PreviousButton.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/OverallSummery.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/ReviewLater.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/Options.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Exam/WebCamCapture.js",["180"],"import React, { useState,useEffect, useContext } from 'react';\nimport Webcam from \"react-webcam\";\nimport { useHistory } from 'react-router-dom';\nimport {PopupContext} from '../../App';\nimport API from '../../api';\n\nconst CaptureTime = process.env.REACT_APP_PHOTO_CAPTURE_TIME * 1000;\n\nconst WebCamCapture = (props) => {\n    const webcamRef                         = React.useRef(null);\n    const [imgSrc, setimgSrc]               = useState(null);\n    const videoConstraints                  = {facingMode: \"user\"};\n    let history                             = useHistory();\n    const {setPopupShow,setPopupMsg}        = useContext(PopupContext);\n    const exam                              = props.exam;\n    \n    const capture                = React.useCallback(\n    () => \n        { \n          if(webcamRef)\n          {\n              const imageSrc           = webcamRef.current.getScreenshot();\n              setimgSrc(imageSrc);  \n              storeSnap(exam,imageSrc);\n          }\n        },\n        [webcamRef,setimgSrc,exam]\n    );\n\n    useEffect(() => {    \n        navigator.mediaDevices.getUserMedia({ video: true, voice: true })\n        .then(function(stream) \n        {\n            props.setMyCameraPerm(true);\n        })\n        .catch(function(err) \n        {\n            props.setMyCameraPerm(false);\n            setPopupShow(true);\n            setPopupMsg('Without Camera Premission Examination can not be started.');\n            history.replace('/studenthome');\n        });\n        let myCapture = setInterval(capture, CaptureTime);\n\n        //------------------Cleanup-----------------------------------------\n        return () => {\n            clearInterval(myCapture);\n        }\n        //------------------------------------------------------------------\n    },[history.location,capture,history,props,setPopupMsg,setPopupShow]);   \n  \n    return (\n        <div className=\"col-lg-12\" style={{margin:\"20px\"}}>\n            <center>\n                <Webcam\n                audio={false}\n                height={400}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width={300}\n                videoConstraints={videoConstraints}\n                screenshotQuality={\"1\"}\n                />\n            </center>\n        </div>\n    );\n  };    \n\n  async function storeSnap(exam,image)\n  {\n    await API.post('/proctor/',{\"type\": \"snapshot\",\"exam\":exam,\"image\":image})\n    .then((res) => {\n        console.log('snap stored successfully');\n    })\n    .catch((error) =>\n    {\n        console.log('problem storing snapshot');\n    });\n  }\n\n  export default WebCamCapture;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Adminhome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSession.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/ClearSessionUserInfo.js",[],"/home/pawan/Desktop/react-template-hooks/src/popup.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureHeader.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Configurations/ConfigureFooter.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstHome.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/InstReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamReport.js",["181","182","183","184","185","186","187"],"/home/pawan/Desktop/react-template-hooks/src/Layout/MyContent.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Institute/Reports/InstExamStudtReport.js",["188"],"import React from 'react';\nimport {useLocation,useHistory} from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nfunction InstExamStudtReport() \n{\n    const location  =  useLocation();\n    let allExams    = location.state.data;\n    let paper_id    = location.state.paper_id;\n    let type        = location.state.type;\n    let result      = searchResult(allExams,paper_id,type);\n    const header    = getHeader();\n    const data      = getData(result);\n    let i           = 1;\n    let history     = useHistory();\n\n    const options = {\n        sizePerPageList: [\n            {\n                text: '5', value: 5\n            }, \n            {\n                text: '10', value: 10\n            }, \n            {\n                text: '50', value: 50\n            },\n            {\n                text: '500', value: 500\n            }, \n            {\n                text: '1000', value: 1000\n            }, \n            {\n                text: 'All', value: data.length\n            }\n        ]\n    };\n\n    console.log(result);\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                <h1 className=\"mt-4\">Student Count Report</h1>\n                <div className=\"breadcrumb col-lg-12\" style={{color:\"maroon\"}}>\n                    <div class=\"col-lg-4\">\n                        <b>Exam Status:</b> {type.toUpperCase()}  \n                    </div>\n                    <div class=\"col-lg-4\">\n                        <b>Paper Code:</b> {location.state.paper_code}\n                    </div>\n                    <div class=\"col-lg-4\">\n                        <button class=\"btn btn-primary btn-sm\" style={{float:\"right\"}} onClick={() => {history.goBack()}}>Go Back</button>\n                    </div> \n                </div>\n                <div className=\"row col-lg-12\" style={{overflow:\"auto\"}}>\n                    <BootstrapTable keyField='srno' data={ data } columns={ header } filter={ filterFactory() } pagination={ paginationFactory(options) }/>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nfunction getHeader()\n{\n    let myHeader = [\n        { text: 'Sr No', dataField: 'srno'},\n        { text: 'Enrollment Number', dataField: 'enrollno',filter: textFilter()},\n        { text: 'Exam Start Time', dataField: 'startedon',filter: textFilter()},\n        { text: 'Exam End Time', dataField: 'endon',filter: textFilter()},\n        { text: 'Exam Status', dataField: 'examstatus',filter: textFilter()}\n    ];\n    return myHeader;\n}\n\n\nfunction getData(result)\n{\n    let myData = [];\n    let i = 1;\n\n    result.filter(function(data) {\n        if(data.stdid)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }).map((data, index) => (\n        myData.push({\n            srno            : i++,\n            enrollno        : data.stdid.username,\n            startedon       : data.startedon,\n            endon           : data.endon,\n            examstatus      : data.examstatus\n        })   \n    ))\n\n    return myData;\n}\n\n\nfunction searchResult(allExams,paper_id,type)\n{\n    let newArr = [];\n    if(type === 'over')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'over')\n            {\n                newArr.push(allExams[i])\n            }\n        }\n        return newArr;\n    }\n    else if(type === 'inprogress')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === 'inprogress')\n            {\n                newArr.push(allExams[i])\n            }\n        }\n        return newArr;\n    }\n    else if(type === 'notattend')\n    {\n        for(let i=0;i < allExams.length; i++)\n        {\n            if(parseInt(paper_id) === parseInt(allExams[i].paper.id) && allExams[i].examstatus === '')\n            {\n                newArr.push(allExams[i])\n            }\n        }\n        return newArr;\n    }\n}\n\nexport default InstExamStudtReport;","/home/pawan/Desktop/react-template-hooks/src/Components/Admin/AdminReports.js",[],"/home/pawan/Desktop/react-template-hooks/src/Components/Admin/Reports/AdminExamReport.js",["189","190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":16,"column":10,"nodeType":"197","messageId":"198","endLine":16,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":69,"column":17,"nodeType":"201","endLine":69,"endColumn":60},{"ruleId":"202","severity":1,"message":"203","line":69,"column":60,"nodeType":"201","endLine":69,"endColumn":117},{"ruleId":"204","severity":1,"message":"205","line":108,"column":7,"nodeType":"206","endLine":108,"endColumn":9,"suggestions":"207"},{"ruleId":"195","severity":1,"message":"208","line":7,"column":25,"nodeType":"197","messageId":"198","endLine":7,"endColumn":39},{"ruleId":"199","severity":1,"message":"200","line":41,"column":25,"nodeType":"201","endLine":41,"endColumn":174},{"ruleId":"195","severity":1,"message":"209","line":9,"column":10,"nodeType":"197","messageId":"198","endLine":9,"endColumn":21},{"ruleId":"195","severity":1,"message":"209","line":12,"column":10,"nodeType":"197","messageId":"198","endLine":12,"endColumn":21},{"ruleId":"204","severity":1,"message":"210","line":179,"column":38,"nodeType":"206","endLine":179,"endColumn":40,"suggestions":"211"},{"ruleId":"204","severity":1,"message":"212","line":42,"column":6,"nodeType":"206","endLine":42,"endColumn":22,"suggestions":"213"},{"ruleId":"204","severity":1,"message":"214","line":52,"column":6,"nodeType":"206","endLine":52,"endColumn":16,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"216","line":62,"column":6,"nodeType":"206","endLine":62,"endColumn":22,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":181,"column":34,"nodeType":"220","messageId":"221","endLine":181,"endColumn":36},{"ruleId":"218","severity":1,"message":"219","line":191,"column":34,"nodeType":"220","messageId":"221","endLine":191,"endColumn":36},{"ruleId":"195","severity":1,"message":"208","line":12,"column":23,"nodeType":"197","messageId":"198","endLine":12,"endColumn":37},{"ruleId":"195","severity":1,"message":"222","line":11,"column":12,"nodeType":"197","messageId":"198","endLine":11,"endColumn":18},{"ruleId":"195","severity":1,"message":"223","line":19,"column":9,"nodeType":"197","messageId":"198","endLine":19,"endColumn":10},{"ruleId":"204","severity":1,"message":"224","line":48,"column":7,"nodeType":"206","endLine":48,"endColumn":21,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":54,"column":30,"nodeType":"228","messageId":"229","endLine":54,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":54,"column":56,"nodeType":"228","messageId":"229","endLine":54,"endColumn":58},{"ruleId":"226","severity":1,"message":"227","line":55,"column":30,"nodeType":"228","messageId":"229","endLine":55,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":55,"column":56,"nodeType":"228","messageId":"229","endLine":55,"endColumn":58},{"ruleId":"230","severity":1,"message":"231","line":144,"column":27,"nodeType":"220","messageId":"232","endLine":161,"endColumn":22},{"ruleId":"195","severity":1,"message":"223","line":16,"column":9,"nodeType":"197","messageId":"198","endLine":16,"endColumn":10},{"ruleId":"195","severity":1,"message":"233","line":9,"column":12,"nodeType":"197","messageId":"198","endLine":9,"endColumn":19},{"ruleId":"195","severity":1,"message":"234","line":9,"column":20,"nodeType":"197","messageId":"198","endLine":9,"endColumn":26},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHeaderData'. Either include it or remove the dependency array.","ArrayExpression",["237"],"'setCurrentUser' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFlag'. Either include it or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'history', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'questionIndex'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'history', 'props', 'setPopupMsg', and 'setPopupShow'. Either include them or remove the dependency array.",["241"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'imgSrc' is assigned a value but never used.","'i' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'setMsg', and 'setShow'. Either include them or remove the dependency array.",["242"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'allPapers'.","unsafeRefs","'setShow' is assigned a value but never used.","'setMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [getHeaderData]",{"range":"255","text":"256"},"Update the dependencies array to be: [updateFlag]",{"range":"257","text":"258"},"Update the dependencies array to be: [history, props.location, setMsg, setShow]",{"range":"259","text":"260"},"Update the dependencies array to be: [myOption, questionIndex]",{"range":"261","text":"262"},"Update the dependencies array to be: [history, props, props.location, setPopupMsg, setPopupShow]",{"range":"263","text":"264"},"Update the dependencies array to be: [props, props.instId, setMsg, setShow]",{"range":"265","text":"266"},[3771,3773],"[getHeaderData]",[8470,8472],"[updateFlag]",[1750,1766],"[history, props.location, setMsg, setShow]",[1921,1931],"[myOption, questionIndex]",[2266,2282],"[history, props, props.location, setPopupMsg, setPopupShow]",[1637,1651],"[props, props.instId, setMsg, setShow]"]